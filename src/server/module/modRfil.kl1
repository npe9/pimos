%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                          %
% (C)1992 Institute for New Generation Computer Technology %
% Read COPYRIGHT for detailed information.                 %
%                                                          %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 :- module modulereq_filter .
 :- public modulereq_filter /2 .
:- with_macro pimos.

modulereq_filter(User,OS) :-true|
        modulereq_filter(User,OS,_,[]) .
modulereq_filter(User,normal(__1,__2,__3),_,Error) :-true|
        User =normal(_1,__2,_3),
        '+normal$$$stream$1'(_1,__1,Flag,[module_request]),
        '-attention'(_3,__3,Flag,[module_request]) .
modulereq_filter(User,abnormal,_,Error) :-true|
        User =abnormal .
modulereq_filter(User,aborted,_,Error) :-true|
        User =aborted .
modulereq_filter(User,disconnected,_,Error) :-true|
        User =disconnected .
'+normal$$$stream$1'([User|U2],OS,_,Error) :-true|
        '+modulereq_command'(User,OS1,Flag,[module_request]),
        '+normal$$$stream$1$wait'(U2,OS,OS1,Flag,Error) .
'+normal$$$stream$1'([],OS,_,Error) :-true|
        []=OS .
otherwise .
'+normal$$$stream$1'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'+normal$$$stream$1$wait'(U2,OS,OS1,_,Error) :-wait(OS1)|
        OS =[OS1|OS2],
        '+normal$$$stream$1'(U2,OS2,_,Error) .
'+normal$$$stream$1$wait'(U2,OS,OS1,fail,Error) :-true|
        true .
'-attention'(User,attention,_,Error) :-true|
        User =attention .
'-attention'(User,[],_,Error) :-true|
        User =[] .
'+modulereq_command'(create(_1),OS,_,Error) :-true|
        create(__1) =OS,
        '-create$$$enu$1'(_1,__1,Flag,[module_device]) .
otherwise .
'+modulereq_command'(User,OS,Flag,Error) :-true|
        '+aa_command'(User,OS,Flag,Error) .
'-create$$$enu$1'(User,normal(__1,__2,__3),_,Error) :-true|
        User =normal(_1,__2,_3),
        '+normal$$$stream$2'(_1,__1,Flag,Error),
        '-attention'(_3,__3,Flag,Error) .
'-create$$$enu$1'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-create$$$enu$1'(User,aborted,_,Error) :-true|
        User =aborted .
'-create$$$enu$1'(User,disconnected,_,Error) :-true|
        User =disconnected .
'+normal$$$stream$2'([User|U2],OS,_,Error) :-true|
        '+module_command'(User,OS1,Flag,Error),
        '+normal$$$stream$2$wait'(U2,OS,OS1,Flag,Error) .
'+normal$$$stream$2'([],OS,_,Error) :-true|
        []=OS .
otherwise .
'+normal$$$stream$2'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'+normal$$$stream$2$wait'(U2,OS,OS1,_,Error) :-wait(OS1)|
        OS =[OS1|OS2],
        '+normal$$$stream$2'(U2,OS2,_,Error) .
'+normal$$$stream$2$wait'(U2,OS,OS1,fail,Error) :-true|
        true .
'+aa_command'(reset(_1),OS,_,Error) :-true|
        reset(__1) =OS,
        '-reset$$$enu$1'(_1,__1,Flag,['reset /1'|Error]) .
'+aa_command'(next_attention(_1),OS,_,Error) :-true|
        next_attention(__1) =OS,
        '-next_attention$$$enu$1'(_1,__1,Flag,['next_attention /1'|Error]) .
'+aa_command'(resend(_1,_2),OS,_,Error) :-true|
        '+aa_command$wait'(resend(__1,_2),OS,Flag,Error),
        '+msgid'(_1,__1,Flag,[msgid,'resend /2'|Error]) .
'+aa_command'(cancel(_1,_2),OS,_,Error) :-true|
        '+aa_command$wait'(cancel(__1,_2),OS,Flag,Error),
        '+msgid'(_1,__1,Flag,[msgid,'cancel /2'|Error]) .
otherwise .
'+aa_command'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'+aa_command$wait'(User,OS,fail,Error) :-true|
        true .
'+aa_command$wait'(resend(__1,_2),OS,_,Error) :-wait(__1)|
        resend(__1,__2) =OS,
        '-status'(_2,__2,Flag,['resend /2'|Error]) .
'+aa_command$wait'(cancel(__1,_2),OS,_,Error) :-wait(__1)|
        cancel(__1,__2) =OS,
        '-status'(_2,__2,Flag,['cancel /2'|Error]) .
'+module_command'(define_package(_1,_2,_3,_4),OS,_,Error) :-true|
        '+module_command$wait'(define_package(__1,__2,__3,_4),OS,Flag,Error),
        '+packagename'(_1,__1,Flag,[packagename,'define_package /4'|Error]),
        '+packagename'(_2,__2,Flag,[packagename,'define_package /4'|Error]),
        '+protection'(_3,__3,Flag,[protection,'define_package /4'|Error]) .
'+module_command'(set_package_owner(_1,_2,_3),OS,_,Error) :-true|
        '+module_command$wait'(set_package_owner(__1,__2,_3),OS,Flag,Error),
        '+packagename'(_1,__1,Flag,[packagename,'set_package_owner /3'|Error]),
        '+owner_info'(_2,__2,Flag,[owner_info,'set_package_owner /3'|Error]) .
'+module_command'(protect_package(_1,_2,_3),OS,_,Error) :-true|
        '+module_command$wait'(protect_package(__1,__2,_3),OS,Flag,Error),
        '+packagename'(_1,__1,Flag,[packagename,'protect_package /3'|Error]),
        '+protection'(_2,__2,Flag,[protection,'protect_package /3'|Error]) .
'+module_command'(get_package_info(_1,_2),OS,_,Error) :-true|
        '+module_command$wait'(get_package_info(__1,_2),OS,Flag,Error),
        '+packagename'(_1,__1,Flag,[packagename,'get_package_info /2'|Error]) .
'+module_command'(get_super_package(_1,_2),OS,_,Error) :-true|
        '+module_command$wait'(get_super_package(__1,_2),OS,Flag,Error),
        '+packagename'(_1,__1,Flag,[packagename,'get_super_package /2'|Error]) .
'+module_command'(get_all_packages(_1),OS,_,Error) :-true|
        get_all_packages(__1) =OS,
        '-packageInfoList'(_1,__1,Flag,['get_all_packages /1'|Error]) .
'+module_command'(remove_package(_1,_2),OS,_,Error) :-true|
        '+module_command$wait'(remove_package(__1,_2),OS,Flag,Error),
        '+packagename'(_1,__1,Flag,[packagename,'remove_package /2'|Error]) .
'+module_command'(get_module_info(_1,_2,_3),OS,_,Error) :-true|
        '+module_command$wait'(get_module_info(__1,__2,_3),OS,Flag,Error),
        '+packagename'(_1,__1,Flag,[packagename,'get_module_info /3'|Error]),
        '+modulename'(_2,__2,Flag,[modulename,'get_module_info /3'|Error]) .
'+module_command'(get_module(_1,_2,_3),OS,_,Error) :-true|
        '+module_command$wait'(get_module(__1,__2,_3),OS,Flag,Error),
        '+packagename'(_1,__1,Flag,[packagename,'get_module /3'|Error]),
        '+modulename'(_2,__2,Flag,[modulename,'get_module /3'|Error]) .
'+module_command'(get_module_in_the_package(_1,_2,_3),OS,_,Error) :-true|
        '+module_command$wait'(get_module_in_the_package(__1,__2,_3),OS,Flag,Error),
        '+packagename'(_1,__1,Flag,[packagename,'get_module_in_the_package /3'|Error]),
        '+modulename'(_2,__2,Flag,[modulename,'get_module_in_the_package /3'|Error]) .
'+module_command'(get_all_modules(_1,_2),OS,_,Error) :-true|
        '+module_command$wait'(get_all_modules(__1,_2),OS,Flag,Error),
        '+packagename'(_1,__1,Flag,[packagename,'get_all_modules /2'|Error]) .
'+module_command'(get_all_modules(_1),OS,_,Error) :-true|
        get_all_modules(__1) =OS,
        '-module_status_4'(_1,__1,Flag,['get_all_modules /1'|Error]) .
'+module_command'(get_code(_1,_2,_3,_4,_5),OS,_,Error) :-true|
        '+module_command$wait'(get_code(__1,__2,__3,__4,_5),OS,Flag,Error),
        '+packagename'(_1,__1,Flag,[packagename,'get_code /5'|Error]),
        '+modulename'(_2,__2,Flag,[modulename,'get_code /5'|Error]),
        '+predname'(_3,__3,Flag,[predname,'get_code /5'|Error]),
        '+arity'(_4,__4,Flag,[arity,'get_code /5'|Error]) .
'+module_command'(update_module(_1,_2,_3,_4),OS,_,Error) :-true|
        '+module_command$wait'(update_module(__1,__2,__3,_4),OS,Flag,Error),
        '+packagename'(_1,__1,Flag,[packagename,'update_module /4'|Error]),
        '+modulename'(_2,__2,Flag,[modulename,'update_module /4'|Error]),
        '+update_module$module$1'(_3,__3,Flag,[update_module,'update_module /4'|Error]) .
'+module_command'(remove_module(_1,_2,_3),OS,_,Error) :-true|
        '+module_command$wait'(remove_module(__1,__2,_3),OS,Flag,Error),
        '+packagename'(_1,__1,Flag,[packagename|Error]),
        '+modulename'(_2,__2,Flag,[modulename|Error]) .
otherwise .
'+module_command'(User,OS,Flag,Error) :-true|
        '+aa_command'(User,OS,Flag,Error) .
'+module_command$wait'(User,OS,fail,Error) :-true|
        true .
'+module_command$wait'(define_package(__1,__2,__3,_4),OS,_,Error) :-wait(__1),wait(__2),wait(__3)|
        define_package(__1,__2,__3,__4) =OS,
        '-retrieval_status'(_4,__4,Flag,['define_package /4'|Error]) .
'+module_command$wait'(set_package_owner(__1,__2,_3),OS,_,Error) :-wait(__1),wait(__2)|
        set_package_owner(__1,__2,__3) =OS,
        '-retrieval_status'(_3,__3,Flag,['set_package_owner /3'|Error]) .
'+module_command$wait'(protect_package(__1,__2,_3),OS,_,Error) :-wait(__1),wait(__2)|
        protect_package(__1,__2,__3) =OS,
        '-retrieval_status'(_3,__3,Flag,['protect_package /3'|Error]) .
'+module_command$wait'(get_package_info(__1,_2),OS,_,Error) :-wait(__1)|
        get_package_info(__1,__2) =OS,
        '-get_package_info$$$enu$1'(_2,__2,Flag,['get_package_info /2'|Error]) .
'+module_command$wait'(get_super_package(__1,_2),OS,_,Error) :-wait(__1)|
        get_super_package(__1,__2) =OS,
        '-get_super_package$$$enu$1'(_2,__2,Flag,['get_super_package /2'|Error]) .
'+module_command$wait'(remove_package(__1,_2),OS,_,Error) :-wait(__1)|
        remove_package(__1,__2) =OS,
        '-retrieval_status_1'(_2,__2,Flag,['remove_package /2'|Error]) .
'+module_command$wait'(get_module_info(__1,__2,_3),OS,_,Error) :-wait(__1),wait(__2)|
        get_module_info(__1,__2,__3) =OS,
        '-module_status_1'(_3,__3,Flag,['get_module_info /3'|Error]) .
'+module_command$wait'(get_module(__1,__2,_3),OS,_,Error) :-wait(__1),wait(__2)|
        get_module(__1,__2,__3) =OS,
        '-module_status_2'(_3,__3,Flag,['get_module /3'|Error]) .
'+module_command$wait'(get_module_in_the_package(__1,__2,_3),OS,_,Error) :-wait(__1),wait(__2)|
        get_module_in_the_package(__1,__2,__3) =OS,
        '-module_status_2'(_3,__3,Flag,['get_module_in_the_package /3'|Error]) .
'+module_command$wait'(get_all_modules(__1,_2),OS,_,Error) :-wait(__1)|
        get_all_modules(__1,__2) =OS,
        '-module_status_3'(_2,__2,Flag,['get_all_modules /2'|Error]) .
'+module_command$wait'(get_code(__1,__2,__3,__4,_5),OS,_,Error) :-wait(__1),wait(__2),wait(__3),wait(__4)|
        get_code(__1,__2,__3,__4,__5) =OS,
        '-module_status_5'(_5,__5,Flag,['get_code /5'|Error]) .
'+module_command$wait'(update_module(__1,__2,__3,_4),OS,_,Error) :-wait(__1),wait(__2),wait(__3)|
        update_module(__1,__2,__3,__4) =OS,
        '-retrieval_status_1'(_4,__4,Flag,['update_module /4'|Error]) .
'+module_command$wait'(remove_module(__1,__2,_3),OS,_,Error) :-wait(__1),wait(__2)|
        remove_module(__1,__2,__3) =OS,
        '-retrieval_status_1'(_3,__3,Flag,Error) .
'+update_module$module$1'(User,OS,_,Error) :-module(User,_)|
        User =OS .
otherwise .
'+update_module$module$1'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'-reset$$$enu$1'(User,normal(__1,__2,__3),_,Error) :-true|
        User =normal(__1,_2,_3),
        '-attention'(_2,__2,Flag,[attention|Error]),
        '-msgid'(_3,__3,Flag,[msgid|Error]) .
'-reset$$$enu$1'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-reset$$$enu$1'(User,aborted,_,Error) :-true|
        User =aborted .
'-reset$$$enu$1'(User,disconnected,_,Error) :-true|
        User =disconnected .
'-next_attention$$$enu$1'(User,normal(__1),_,Error) :-true|
        User =normal(_1),
        '-attention'(_1,__1,Flag,Error) .
'-next_attention$$$enu$1'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-next_attention$$$enu$1'(User,aborted,_,Error) :-true|
        User =aborted .
'-next_attention$$$enu$1'(User,disconnected,_,Error) :-true|
        User =disconnected .
'+msgid'(User,OS,_,Error) :-integer(User)|
        User =OS .
otherwise .
'+msgid'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'-status'(User,normal,_,Error) :-true|
        User =normal .
'-status'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-status'(User,aborted,_,Error) :-true|
        User =aborted .
'-status'(User,disconnected,_,Error) :-true|
        User =disconnected .
'+packagename'(User,OS,_,Error) :-atom(User)|
        User =OS .
otherwise .
'+packagename'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'+protection'(User,OS,_,Error) :-integer(User)|
        User =OS .
otherwise .
'+protection'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'-retrieval_status'(User,normal,_,Error) :-true|
        User =normal .
'-retrieval_status'(User,protection_violation,_,Error) :-true|
        User =protection_violation .
'-retrieval_status'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-retrieval_status'(User,aborted,_,Error) :-true|
        User =aborted .
'-retrieval_status'(User,non_existent,_,Error) :-true|
        User =non_existent .
'-get_package_info$$$enu$1'(User,normal(__1),_,Error) :-true|
        User =normal(_1),
        '-protectionInfo'(_1,__1,Flag,Error) .
'-get_package_info$$$enu$1'(User,protection_violation,_,Error) :-true|
        User =protection_violation .
'-get_package_info$$$enu$1'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-get_package_info$$$enu$1'(User,aborted,_,Error) :-true|
        User =aborted .
'-get_package_info$$$enu$1'(User,non_existent,_,Error) :-true|
        User =non_existent .
'-get_super_package$$$enu$1'(User,normal(__1),_,Error) :-true|
        User =normal(_1),
        '-packagename'(_1,__1,Flag,Error) .
'-get_super_package$$$enu$1'(User,protection_violation,_,Error) :-true|
        User =protection_violation .
'-get_super_package$$$enu$1'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-get_super_package$$$enu$1'(User,aborted,_,Error) :-true|
        User =aborted .
'-get_super_package$$$enu$1'(User,non_existent,_,Error) :-true|
        User =non_existent .
'-packageInfoList'(User,normal(__1),_,Error) :-true|
        User =normal(_1),
        '-normal$$$list$1'(_1,__1,Flag,Error) .
'-packageInfoList'(User,protection_violation,_,Error) :-true|
        User =protection_violation .
'-packageInfoList'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-retrieval_status_1'(User,normal,_,Error) :-true|
        User =normal .
'-retrieval_status_1'(User,protection_violation,_,Error) :-true|
        User =protection_violation .
'-retrieval_status_1'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-retrieval_status_1'(User,aborted,_,Error) :-true|
        User =aborted .
'-retrieval_status_1'(User,non_existent(__1),_,Error) :-true|
        User =non_existent(_1),
        '-non_existent$ground$1'(_1,__1,Flag,Error) .
'-non_existent$ground$1'(User,OS,_,Error) :-true|
        '-ground'(OS2,OS),
        OS2 =User .
'+modulename'(User,OS,_,Error) :-atom(User)|
        User =OS .
otherwise .
'+modulename'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'-module_status_1'(User,normal(__1,__2,__3),_,Error) :-true|
        User =normal(_1,_2,_3),
        '-packagename'(_1,__1,Flag,Error),
        '-normal$module$1'(_2,__2,Flag,Error),
        '-moduleSize'(_3,__3,Flag,Error) .
'-module_status_1'(User,non_existent,_,Error) :-true|
        User =non_existent .
'-module_status_1'(User,protection_violation,_,Error) :-true|
        User =protection_violation .
'-module_status_1'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-normal$module$1'(User,OS,_,Error) :-module(OS,_)|
        OS =User .
'-module_status_2'(User,normal(__1),_,Error) :-true|
        User =normal(_1),
        '-normal$module$2'(_1,__1,Flag,Error) .
'-module_status_2'(User,non_existent,_,Error) :-true|
        User =non_existent .
'-module_status_2'(User,protection_violation,_,Error) :-true|
        User =protection_violation .
'-module_status_2'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-normal$module$2'(User,OS,_,Error) :-module(OS,_)|
        OS =User .
'-module_status_3'(User,normal(__1),_,Error) :-true|
        User =normal(_1),
        '-moduleInfoList'(_1,__1,Flag,Error) .
'-module_status_3'(User,non_existent,_,Error) :-true|
        User =non_existent .
'-module_status_3'(User,protection_violation,_,Error) :-true|
        User =protection_violation .
'-module_status_3'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-module_status_4'(User,normal(__1),_,Error) :-true|
        User =normal(_1),
        '-normal$$$list$2'(_1,__1,Flag,Error) .
'-module_status_4'(User,protection_violation,_,Error) :-true|
        User =protection_violation .
'-module_status_4'(User,abnormal,_,Error) :-true|
        User =abnormal .
'+predname'(User,OS,_,Error) :-atom(User)|
        User =OS .
otherwise .
'+predname'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'+arity'(User,OS,_,Error) :-integer(User)|
        User =OS .
otherwise .
'+arity'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'-module_status_5'(User,normal(__1),_,Error) :-true|
        User =normal(_1),
        '-normal$code$1'(_1,__1,Flag,Error) .
'-module_status_5'(User,non_existent,_,Error) :-true|
        User =non_existent .
'-module_status_5'(User,non_existent(__1),_,Error) :-true|
        User =non_existent(_1),
        '-non_existent$ground$2'(_1,__1,Flag,Error) .
'-module_status_5'(User,protection_violation,_,Error) :-true|
        User =protection_violation .
'-module_status_5'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-normal$code$1'(User,OS,_,Error) :-code(OS,_,_,_)|
        OS =User .
'-non_existent$ground$2'(User,OS,_,Error) :-true|
        '-ground'(OS2,OS),
        OS2 =User .
'-msgid'(User,OS,_,Error) :-integer(OS)|
        OS =User .
'+owner_info'({_1,_2},OS,_,Error) :-true|
        '+owner_info$wait'({__1,__2},OS,Flag,Error),
        '+uid'(_1,__1,Flag,Error),
        '+gid'(_2,__2,Flag,Error) .
otherwise .
'+owner_info'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'+owner_info$wait'({__1,__2},OS,_,Error) :-wait(__1),wait(__2)|
        {__1,__2} =OS .
'+owner_info$wait'(User,OS,fail,Error) :-true|
        true .
'-packagename'(User,OS,_,Error) :-atom(OS)|
        OS =User .
'-normal$$$list$1'(User,[OS|OS2],Flag,Error) :-true|
        '-packageInfo'(User1,OS,Flag,Error),
        '-normal$$$list$1$wait'(User,OS2,User1,Flag,Error) .
'-normal$$$list$1'(User,[],Flag,Error) :-true|
        User =[] .
'-normal$$$list$1$wait'(User,OS2,User1,Flag,Error) :-wait(User1)|
        User =[User1|User2],
        '-normal$$$list$1'(User2,OS2,Flag,Error) .
'-moduleSize'(User,OS,_,Error) :-integer(OS)|
        OS =User .
'-normal$$$list$2'(User,[OS|OS2],Flag,Error) :-true|
        '-packageInfo3'(User1,OS,Flag,Error),
        '-normal$$$list$2$wait'(User,OS2,User1,Flag,Error) .
'-normal$$$list$2'(User,[],Flag,Error) :-true|
        User =[] .
'-normal$$$list$2$wait'(User,OS2,User1,Flag,Error) :-wait(User1)|
        User =[User1|User2],
        '-normal$$$list$2'(User2,OS2,Flag,Error) .
'+uid'(User,OS,_,Error) :-integer(User)|
        User =OS .
otherwise .
'+uid'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'+gid'(User,OS,_,Error) :-integer(User)|
        User =OS .
otherwise .
'+gid'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'-protectionInfo'(User,{__1,__2},_,Error) :-true|
        User ={_1,_2},
        '-protectionInfo$ground$1'(_1,__1,Flag,Error),
        '-protection'(_2,__2,Flag,Error) .
'-protectionInfo$ground$1'(User,OS,_,Error) :-true|
        '-ground'(OS2,OS),
        OS2 =User .
'-moduleInfoList'(User,[OS|OS2],Flag,Error) :-true|
        '-moduleInfo'(User1,OS,Flag,Error),
        '-moduleInfoList$wait'(User,OS2,User1,Flag,Error) .
'-moduleInfoList'(User,[],Flag,Error) :-true|
        User =[] .
'-moduleInfoList$wait'(User,OS2,User1,Flag,Error) :-wait(User1)|
        User =[User1|User2],
        '-moduleInfoList'(User2,OS2,Flag,Error) .
'-protection'(User,OS,_,Error) :-integer(OS)|
        OS =User .
'-packageInfo'(User,{__1,__2,__3},_,Error) :-true|
        User ={_1,_2,_3},
        '-packagename'(_1,__1,Flag,Error),
        '-packageInfo1'(_2,__2,Flag,Error),
        '-packageInfo2'(_3,__3,Flag,Error) .
'-packageInfo3'(User,{__1,__2},_,Error) :-true|
        User ={_1,_2},
        '-packagename'(_1,__1,Flag,Error),
        '-module_status_3'(_2,__2,Flag,Error) .
'-moduleInfo'(User,{__1,__2,__3},_,Error) :-true|
        User ={_1,_2,_3},
        '-modulename'(_1,__1,Flag,Error),
        '-moduleInfo$module$1'(_2,__2,Flag,Error),
        '-size'(_3,__3,Flag,Error) .
'-moduleInfo$module$1'(User,OS,_,Error) :-module(OS,_)|
        OS =User .
'-packageInfo1'(User,normal(__1),_,Error) :-true|
        User =normal(_1),
        '-packagename'(_1,__1,Flag,Error) .
'-packageInfo1'(User,protection_violation,_,Error) :-true|
        User =protection_violation .
'-packageInfo1'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-packageInfo1'(User,aborted,_,Error) :-true|
        User =aborted .
'-packageInfo1'(User,non_existent,_,Error) :-true|
        User =non_existent .
'-packageInfo2'(User,normal(__1),_,Error) :-true|
        User =normal(_1),
        '-normal$ground$1'(_1,__1,Flag,Error) .
'-packageInfo2'(User,protection_violation,_,Error) :-true|
        User =protection_violation .
'-packageInfo2'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-packageInfo2'(User,aborted,_,Error) :-true|
        User =aborted .
'-packageInfo2'(User,non_existent,_,Error) :-true|
        User =non_existent .
'-normal$ground$1'(User,OS,_,Error) :-true|
        '-ground'(OS2,OS),
        OS2 =User .
'-modulename'(User,OS,_,Error) :-atom(OS)|
        OS =User .
'-size'(User,OS,_,Error) :-integer(OS)|
        OS =User .
%%%%% system defined protocols %%%%%%%%%%
'+ground'(X, Y) :- list(X) | '$$groundl'(X, Y).
'+ground'(X, Y) :- vector(X,Size), Size \= 0 | 
        '$$groundv'(X, 0, Size, X2),
        '$$groundv2'(X2, Y).
otherwise.
'+ground'(X, Y) :- wait(X) | Y = X.
'-ground'(X, Y) :- list(Y) | '$$groundl'(Y, X).
'-ground'(X, Y) :- vector(Y,Size), Size \= 0 | 
        '$$groundv'(Y, 0, Size, Y2),
        '$$groundv2'(Y2, X).
otherwise.
'-ground'(X, Y) :- wait(Y) | Y = X.
'$$groundl'([X1|X2], Y) :- true | '+ground'(X1,X11),
        '$$groundl2'(X11, X2, Y).
'$$groundl'([], Y) :- true | Y = [].
'$$groundl2'(X11, X2, Y) :- wait(X11) |
        '$$groundl31'(X2, [X11|Tail], Tail, Y).
'$$groundl31'([X1|X2], Top, Tail, Y) :- true |
        '+ground'(X1,X11),
        '$$groundl32'(X11, X2, Top, Tail, Y).
'$$groundl31'([], Top, Tail, Y) :- true |
        Tail = [],
        Top = Y.
'$$groundl32'(X11, X2, Top, Tail, Y) :- wait(X11), X2 \= [] |
        Tail = [X11|Tail2],
        '$$groundl31'(X2, Top, Tail2, Y).
'$$groundl32'(X11, [], Top, Tail, Y) :- wait(X11) |
        Tail = [X11],
        Y = Top.
'$$groundv2'(X2, Y) :- wait(X2) | X2 = Y.
'$$groundv'(X, Pos, Size, X2) :- Pos \= Size |
        vector_element(X, Pos, Elm, NX),
        '+ground'(Elm,Elm2),
        Npos := Pos + 1,
        '$$groundv3'(Elm2, NX, Npos, Size, X2).
'$$groundv3'(Elm, X, Pos, Size, X2) :- wait(Elm), Pos \= Size |
        vector_element(X, Pos, Nelm, NX),
        '+ground'(Nelm, Nelm2),
        Npos := Pos + 1,
        '$$groundv3'(Nelm2, NX, Npos, Size, X2).
'$$groundv3'(Elm, X, Size, Size, X2) :- wait(Elm) |
        X = X2. 
%%%%% to raise error %%%%%%%%%%
raise_error(Info,Msg):- true |
        atom_table:cache_table(Atom),
        formatInfo(Info,[],Fstring,Atom),
        shoen:raise(pimos_tag#error,'$PIMOS$'(illegal_message_to_PIMOS,Fstring),Msg).
formatInfo([Infoatom | Info], StringList,Fstring,Atom):- 
        atom(Infoatom) |
        Atom = [get_atom_name(Infoatom,normal(InfoString)) | Atail],
        NSlist = [InfoString | StringList],
        formatInfo(Info, NSlist, Fstring, Atail).
formatInfo([], Slist, Fstring, Atom):- true |
        Atom = [],
        new_string(New,1,16),
        set_string_element(New,0,key#lf,NL),
        format(1,Slist,StringList,NL),
        builtin#append_string(StringList, Fstring).
format(1,[Info|Tail],StringList,NL):- true |
        StringList = ["Device : ",Info,NL |Stail2],
        format(2,Tail,Stail2,NL).
format(2,[Info|Tail],StringList,NL):- true |
        StringList = ["Message : ",Info,NL | Stail2],
        format(3,Tail,Stail2,NL).
format(3,[Info|Tail],StringList,NL):- true |
        StringList = [Info,NL | Stail2],
        format(3,Tail,Stail2,NL).
format(_,[],StringList,_):- true |
        StringList = [].
