%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                          %
% (C)1992 Institute for New Generation Computer Technology %
% Read COPYRIGHT for detailed information.                 %
%                                                          %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 :- module userreq_filter .
 :- public userreq_filter /2 .
:- with_macro pimos.

userreq_filter(User,OS) :-true|
        userreq_filter(User,OS,_,[]) .
userreq_filter(User,normal(__1,__2,__3),_,Error) :-true|
        User =normal(_1,__2,_3),
        '+normal$$$stream$1'(_1,__1,Flag,[user_request]),
        '-attention'(_3,__3,Flag,[user_request]) .
userreq_filter(User,abnormal,_,Error) :-true|
        User =abnormal .
userreq_filter(User,aborted,_,Error) :-true|
        User =aborted .
userreq_filter(User,disconnected,_,Error) :-true|
        User =disconnected .
'+normal$$$stream$1'([User|U2],OS,_,Error) :-true|
        '+userreq_command'(User,OS1,Flag,[user_request]),
        '+normal$$$stream$1$wait'(U2,OS,OS1,Flag,Error) .
'+normal$$$stream$1'([],OS,_,Error) :-true|
        []=OS .
otherwise .
'+normal$$$stream$1'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'+normal$$$stream$1$wait'(U2,OS,OS1,_,Error) :-wait(OS1)|
        OS =[OS1|OS2],
        '+normal$$$stream$1'(U2,OS2,_,Error) .
'+normal$$$stream$1$wait'(U2,OS,OS1,fail,Error) :-true|
        true .
'-attention'(User,attention,_,Error) :-true|
        User =attention .
'-attention'(User,[],_,Error) :-true|
        User =[] .
'+userreq_command'(create(_1),OS,_,Error) :-true|
        '+userreq_command$wait'(create(__1),OS,Flag,Error),
        '+create$$$enu$1'(_1,__1,Flag,[user_mode,'create /1'|Error]) .
otherwise .
'+userreq_command'(User,OS,Flag,Error) :-true|
        '+aa_command'(User,OS,Flag,Error) .
'+userreq_command$wait'(User,OS,fail,Error) :-true|
        true .
'+userreq_command$wait'(create(__1),OS,_,Error) :-wait(__1)|
        create(__1) =OS .
'+create$$$enu$1'(user(_1),OS,_,Error) :-true|
        user(__1) =OS,
        '-user$$$enu$1'(_1,__1,Flag,[user_device]) .
'+create$$$enu$1'(group(_1),OS,_,Error) :-true|
        group(__1) =OS,
        '-group$$$enu$1'(_1,__1,Flag,[group_device]) .
'+create$$$enu$1'(login(_1),OS,_,Error) :-true|
        login(__1) =OS,
        '-login$$$enu$1'(_1,__1,Flag,[login_device]) .
otherwise .
'+create$$$enu$1'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'+aa_command'(reset(_1),OS,_,Error) :-true|
        reset(__1) =OS,
        '-reset$$$enu$1'(_1,__1,Flag,['reset /1'|Error]) .
'+aa_command'(next_attention(_1),OS,_,Error) :-true|
        next_attention(__1) =OS,
        '-next_attention$$$enu$1'(_1,__1,Flag,['next_attention /1'|Error]) .
'+aa_command'(resend(_1,_2),OS,_,Error) :-true|
        '+aa_command$wait'(resend(__1,_2),OS,Flag,Error),
        '+msgid'(_1,__1,Flag,[msgid,'resend /2'|Error]) .
'+aa_command'(cancel(_1,_2),OS,_,Error) :-true|
        '+aa_command$wait'(cancel(__1,_2),OS,Flag,Error),
        '+msgid'(_1,__1,Flag,[msgid,'cancel /2'|Error]) .
otherwise .
'+aa_command'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'+aa_command$wait'(User,OS,fail,Error) :-true|
        true .
'+aa_command$wait'(resend(__1,_2),OS,_,Error) :-wait(__1)|
        resend(__1,__2) =OS,
        '-status'(_2,__2,Flag,['resend /2'|Error]) .
'+aa_command$wait'(cancel(__1,_2),OS,_,Error) :-wait(__1)|
        cancel(__1,__2) =OS,
        '-status'(_2,__2,Flag,['cancel /2'|Error]) .
'-user$$$enu$1'(User,normal(__1,__2,__3),_,Error) :-true|
        User =normal(_1,__2,_3),
        '+normal$$$stream$2'(_1,__1,Flag,Error),
        '-attention'(_3,__3,Flag,Error) .
'-user$$$enu$1'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-user$$$enu$1'(User,aborted,_,Error) :-true|
        User =aborted .
'-user$$$enu$1'(User,disconnected,_,Error) :-true|
        User =disconnected .
'-group$$$enu$1'(User,normal(__1,__2,__3),_,Error) :-true|
        User =normal(_1,__2,_3),
        '+normal$$$stream$3'(_1,__1,Flag,Error),
        '-attention'(_3,__3,Flag,Error) .
'-group$$$enu$1'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-group$$$enu$1'(User,aborted,_,Error) :-true|
        User =aborted .
'-group$$$enu$1'(User,disconnected,_,Error) :-true|
        User =disconnected .
'-login$$$enu$1'(User,normal(__1,__2,__3),_,Error) :-true|
        User =normal(_1,__2,_3),
        '+normal$$$stream$4'(_1,__1,Flag,Error),
        '-attention'(_3,__3,Flag,Error) .
'-login$$$enu$1'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-login$$$enu$1'(User,aborted,_,Error) :-true|
        User =aborted .
'-login$$$enu$1'(User,disconnected,_,Error) :-true|
        User =disconnected .
'-reset$$$enu$1'(User,normal(__1,__2,__3),_,Error) :-true|
        User =normal(__1,_2,_3),
        '-attention'(_2,__2,Flag,[attention|Error]),
        '-msgid'(_3,__3,Flag,[msgid|Error]) .
'-reset$$$enu$1'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-reset$$$enu$1'(User,aborted,_,Error) :-true|
        User =aborted .
'-reset$$$enu$1'(User,disconnected,_,Error) :-true|
        User =disconnected .
'-next_attention$$$enu$1'(User,normal(__1),_,Error) :-true|
        User =normal(_1),
        '-attention'(_1,__1,Flag,Error) .
'-next_attention$$$enu$1'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-next_attention$$$enu$1'(User,aborted,_,Error) :-true|
        User =aborted .
'-next_attention$$$enu$1'(User,disconnected,_,Error) :-true|
        User =disconnected .
'+normal$$$stream$2'([User|U2],OS,_,Error) :-true|
        '+user_command'(User,OS1,Flag,Error),
        '+normal$$$stream$2$wait'(U2,OS,OS1,Flag,Error) .
'+normal$$$stream$2'([],OS,_,Error) :-true|
        []=OS .
otherwise .
'+normal$$$stream$2'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'+normal$$$stream$2$wait'(U2,OS,OS1,_,Error) :-wait(OS1)|
        OS =[OS1|OS2],
        '+normal$$$stream$2'(U2,OS2,_,Error) .
'+normal$$$stream$2$wait'(U2,OS,OS1,fail,Error) :-true|
        true .
'+msgid'(User,OS,_,Error) :-integer(User)|
        User =OS .
otherwise .
'+msgid'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'-status'(User,normal,_,Error) :-true|
        User =normal .
'-status'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-status'(User,aborted,_,Error) :-true|
        User =aborted .
'-status'(User,disconnected,_,Error) :-true|
        User =disconnected .
'+normal$$$stream$3'([User|U2],OS,_,Error) :-true|
        '+group_command'(User,OS1,Flag,Error),
        '+normal$$$stream$3$wait'(U2,OS,OS1,Flag,Error) .
'+normal$$$stream$3'([],OS,_,Error) :-true|
        []=OS .
otherwise .
'+normal$$$stream$3'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'+normal$$$stream$3$wait'(U2,OS,OS1,_,Error) :-wait(OS1)|
        OS =[OS1|OS2],
        '+normal$$$stream$3'(U2,OS2,_,Error) .
'+normal$$$stream$3$wait'(U2,OS,OS1,fail,Error) :-true|
        true .
'+normal$$$stream$4'([User|U2],OS,_,Error) :-true|
        '+login_command'(User,OS1,Flag,Error),
        '+normal$$$stream$4$wait'(U2,OS,OS1,Flag,Error) .
'+normal$$$stream$4'([],OS,_,Error) :-true|
        []=OS .
otherwise .
'+normal$$$stream$4'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'+normal$$$stream$4$wait'(U2,OS,OS1,_,Error) :-wait(OS1)|
        OS =[OS1|OS2],
        '+normal$$$stream$4'(U2,OS2,_,Error) .
'+normal$$$stream$4$wait'(U2,OS,OS1,fail,Error) :-true|
        true .
'+user_command'(set_up(_1,_2),OS,_,Error) :-true|
        '+user_command$wait'(set_up(__1,_2),OS,Flag,Error),
        '+set_up$$$list$1'(_1,__1,Flag,['set_up /2'|Error]) .
'+user_command'(authenticate(_1,_2,_3),OS,_,Error) :-true|
        '+user_command$wait'(authenticate(__1,__2,_3),OS,Flag,Error),
        '+user_name'(_1,__1,Flag,[user_name,'authenticate /3'|Error]),
        '+password'(_2,__2,Flag,[password,'authenticate /3'|Error]) .
'+user_command'(get_uid(_1,_2),OS,_,Error) :-true|
        '+user_command$wait'(get_uid(__1,_2),OS,Flag,Error),
        '+user_name'(_1,__1,Flag,[user_name,'get_uid /2'|Error]) .
'+user_command'(get_info(_1,_2),OS,_,Error) :-true|
        '+user_command$wait'(get_info(__1,_2),OS,Flag,Error),
        '+uid'(_1,__1,Flag,[uid,'get_info /2'|Error]) .
'+user_command'(status(_1,_2),OS,_,Error) :-true|
        '+user_command$wait'(status(__1,_2),OS,Flag,Error),
        '+uid'(_1,__1,Flag,[uid,'status /2'|Error]) .
'+user_command'(get_all_info(_1),OS,_,Error) :-true|
        get_all_info(__1) =OS,
        '-get_all_info$$$enu$1'(_1,__1,Flag,['get_all_info /1'|Error]) .
'+user_command'(change_password(_1,_2,_3,_4),OS,_,Error) :-true|
        '+user_command$wait'(change_password(__1,__2,__3,_4),OS,Flag,Error),
        '+uid'(_1,__1,Flag,[uid,'change_password /4'|Error]),
        '+password'(_2,__2,Flag,[old_password,'change_password /4'|Error]),
        '+password'(_3,__3,Flag,[new_password,'change_password /4'|Error]) .
otherwise .
'+user_command'(User,OS,Flag,Error) :-true|
        '+aa_command'(User,OS,Flag,Error) .
'+user_command$wait'(User,OS,fail,Error) :-true|
        true .
'+user_command$wait'(set_up(__1,_2),OS,_,Error) :-wait(__1)|
        set_up(__1,__2) =OS,
        '-status'(_2,__2,Flag,['set_up /2'|Error]) .
'+user_command$wait'(authenticate(__1,__2,_3),OS,_,Error) :-wait(__1),wait(__2)|
        authenticate(__1,__2,__3) =OS,
        '-status'(_3,__3,Flag,['authenticate /3'|Error]) .
'+user_command$wait'(get_uid(__1,_2),OS,_,Error) :-wait(__1)|
        get_uid(__1,__2) =OS,
        '-get_uid$$$enu$1'(_2,__2,Flag,['get_uid /2'|Error]) .
'+user_command$wait'(get_info(__1,_2),OS,_,Error) :-wait(__1)|
        get_info(__1,__2) =OS,
        '-get_info$$$enu$1'(_2,__2,Flag,['get_info /2'|Error]) .
'+user_command$wait'(status(__1,_2),OS,_,Error) :-wait(__1)|
        status(__1,__2) =OS,
        '-status$$$enu$1'(_2,__2,Flag,['status /2'|Error]) .
'+user_command$wait'(change_password(__1,__2,__3,_4),OS,_,Error) :-wait(__1),wait(__2),wait(__3)|
        change_password(__1,__2,__3,__4) =OS,
        '-status'(_4,__4,Flag,['change_password /4'|Error]) .
'-msgid'(User,OS,_,Error) :-integer(OS)|
        OS =User .
'+group_command'(set_up(_1,_2),OS,_,Error) :-true|
        '+group_command$wait'(set_up(__1,_2),OS,Flag,Error),
        '+set_up$$$list$2'(_1,__1,Flag,['set_up /2'|Error]) .
'+group_command'(get_gid(_1,_2),OS,_,Error) :-true|
        '+group_command$wait'(get_gid(__1,_2),OS,Flag,Error),
        '+group_name'(_1,__1,Flag,[group_name,'get_gid /2'|Error]) .
'+group_command'(get_gids(_1,_2),OS,_,Error) :-true|
        '+group_command$wait'(get_gids(__1,_2),OS,Flag,Error),
        '+uid'(_1,__1,Flag,[uid,'get_gids /2'|Error]) .
'+group_command'(get_users(_1,_2),OS,_,Error) :-true|
        '+group_command$wait'(get_users(__1,_2),OS,Flag,Error),
        '+gid'(_1,__1,Flag,[gid,'get_users /2'|Error]) .
'+group_command'(get_all_info(_1),OS,_,Error) :-true|
        get_all_info(__1) =OS,
        '-get_all_info$$$enu$2'(_1,__1,Flag,['get_all_info /1'|Error]) .
otherwise .
'+group_command'(User,OS,Flag,Error) :-true|
        '+aa_command'(User,OS,Flag,Error) .
'+group_command$wait'(User,OS,fail,Error) :-true|
        true .
'+group_command$wait'(set_up(__1,_2),OS,_,Error) :-wait(__1)|
        set_up(__1,__2) =OS,
        '-status'(_2,__2,Flag,['set_up /2'|Error]) .
'+group_command$wait'(get_gid(__1,_2),OS,_,Error) :-wait(__1)|
        get_gid(__1,__2) =OS,
        '-get_gid$$$enu$1'(_2,__2,Flag,['get_gid /2'|Error]) .
'+group_command$wait'(get_gids(__1,_2),OS,_,Error) :-wait(__1)|
        get_gids(__1,__2) =OS,
        '-get_gids$$$enu$1'(_2,__2,Flag,['get_gids /2'|Error]) .
'+group_command$wait'(get_users(__1,_2),OS,_,Error) :-wait(__1)|
        get_users(__1,__2) =OS,
        '-get_users$$$enu$1'(_2,__2,Flag,['get_users /2'|Error]) .
'+login_command'(login(_1,_2,_3),OS,_,Error) :-true|
        '+login_command$wait'(login(__1,__2,_3),OS,Flag,Error),
        '+user_name'(_1,__1,Flag,[user_name,'login /3'|Error]),
        '+login_info'(_2,__2,Flag,[login_info,'login /3'|Error]) .
'+login_command'(logout(_1,_2),OS,_,Error) :-true|
        '+login_command$wait'(logout(__1,_2),OS,Flag,Error),
        '+lid'(_1,__1,Flag,[lid,'logout /2'|Error]) .
'+login_command'(get_info(_1,_2),OS,_,Error) :-true|
        '+login_command$wait'(get_info(__1,_2),OS,Flag,Error),
        '+lid'(_1,__1,Flag,[lid,'get_info /2'|Error]) .
'+login_command'(get_login(_1,_2),OS,_,Error) :-true|
        '+login_command$wait'(get_login(__1,_2),OS,Flag,Error),
        '+user_name'(_1,__1,Flag,[user_name,'get_login /2'|Error]) .
'+login_command'(get_all_info(_1),OS,_,Error) :-true|
        get_all_info(__1) =OS,
        '-get_all_info$$$enu$3'(_1,__1,Flag,['get_all_info /1'|Error]) .
otherwise .
'+login_command'(User,OS,Flag,Error) :-true|
        '+aa_command'(User,OS,Flag,Error) .
'+login_command$wait'(User,OS,fail,Error) :-true|
        true .
'+login_command$wait'(login(__1,__2,_3),OS,_,Error) :-wait(__1),wait(__2)|
        login(__1,__2,__3) =OS,
        '-login$$$enu$2'(_3,__3,Flag,['login /3'|Error]) .
'+login_command$wait'(logout(__1,_2),OS,_,Error) :-wait(__1)|
        logout(__1,__2) =OS,
        '-status'(_2,__2,Flag,['logout /2'|Error]) .
'+login_command$wait'(get_info(__1,_2),OS,_,Error) :-wait(__1)|
        get_info(__1,__2) =OS,
        '-get_info$$$enu$2'(_2,__2,Flag,['get_info /2'|Error]) .
'+login_command$wait'(get_login(__1,_2),OS,_,Error) :-wait(__1)|
        get_login(__1,__2) =OS,
        '-get_login$$$enu$1'(_2,__2,Flag,['get_login /2'|Error]) .
'+set_up$$$list$1'([In1|In2],Out,Flag,Error) :-true|
        '+user_all_info'(In1,In11,Flag,['set_up /2'|Error]),
        '+set_up$$$list$1$list0'(In11,In2,Top,Top,Out,Flag,Error) .
'+set_up$$$list$1'([],Out,Flag,Error) :-true|
        []=Out .
'+set_up$$$list$1$list0'(In11,In2,Top,Tail,Out,Flag,Error) :-wait(In11)|
        '+set_up$$$list$1$list1'(In2,Top,Tail2,Out,Flag,Error),
        Tail =[In11|Tail2] .
'+set_up$$$list$1$list0'(In11,In2,Top,Tail,Out,fail,Error) :-true|
        true .
'+set_up$$$list$1$list1'([],Top,Tail,Out,Flag,Error) :-true|
        Tail =[],
        Out =Top .
'+set_up$$$list$1$list1'([In1|In2],Top,Tail,Out,Flag,Error) :-true|
        '+user_all_info'(In1,In11,Flag,Error),
        '+set_up$$$list$1$list0'(In11,In2,Top,Tail,Out,Flag,Error) .
'+user_name'(User,OS,_,Error) :-string(User,_,_)|
        User =OS .
otherwise .
'+user_name'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'+password'(User,OS,_,Error) :-string(User,_,_)|
        User =OS .
otherwise .
'+password'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'-get_uid$$$enu$1'(User,normal(__1),_,Error) :-true|
        User =normal(_1),
        '-uid'(_1,__1,Flag,Error) .
'-get_uid$$$enu$1'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-get_uid$$$enu$1'(User,aborted,_,Error) :-true|
        User =aborted .
'-get_uid$$$enu$1'(User,disconnected,_,Error) :-true|
        User =disconnected .
'+uid'(User,OS,_,Error) :-integer(User)|
        User =OS .
otherwise .
'+uid'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'-get_info$$$enu$1'(User,normal(__1),_,Error) :-true|
        User =normal(_1),
        '-user_info'(_1,__1,Flag,Error) .
'-get_info$$$enu$1'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-get_info$$$enu$1'(User,aborted,_,Error) :-true|
        User =aborted .
'-get_info$$$enu$1'(User,disconnected,_,Error) :-true|
        User =disconnected .
'-status$$$enu$1'(User,normal(__1),_,Error) :-true|
        User =normal(_1),
        '-change_count'(_1,__1,Flag,Error) .
'-status$$$enu$1'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-status$$$enu$1'(User,aborted,_,Error) :-true|
        User =aborted .
'-status$$$enu$1'(User,disconnected,_,Error) :-true|
        User =disconnected .
'-get_all_info$$$enu$1'(User,normal(__1),_,Error) :-true|
        User =normal(_1),
        '-normal$$$list$1'(_1,__1,Flag,Error) .
'-get_all_info$$$enu$1'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-get_all_info$$$enu$1'(User,aborted,_,Error) :-true|
        User =aborted .
'-get_all_info$$$enu$1'(User,disconnected,_,Error) :-true|
        User =disconnected .
'+set_up$$$list$2'([In1|In2],Out,Flag,Error) :-true|
        '+group_info'(In1,In11,Flag,['set_up /2'|Error]),
        '+set_up$$$list$2$list0'(In11,In2,Top,Top,Out,Flag,Error) .
'+set_up$$$list$2'([],Out,Flag,Error) :-true|
        []=Out .
'+set_up$$$list$2$list0'(In11,In2,Top,Tail,Out,Flag,Error) :-wait(In11)|
        '+set_up$$$list$2$list1'(In2,Top,Tail2,Out,Flag,Error),
        Tail =[In11|Tail2] .
'+set_up$$$list$2$list0'(In11,In2,Top,Tail,Out,fail,Error) :-true|
        true .
'+set_up$$$list$2$list1'([],Top,Tail,Out,Flag,Error) :-true|
        Tail =[],
        Out =Top .
'+set_up$$$list$2$list1'([In1|In2],Top,Tail,Out,Flag,Error) :-true|
        '+group_info'(In1,In11,Flag,Error),
        '+set_up$$$list$2$list0'(In11,In2,Top,Tail,Out,Flag,Error) .
'+group_name'(User,OS,_,Error) :-string(User,_,_)|
        User =OS .
otherwise .
'+group_name'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'-get_gid$$$enu$1'(User,normal(__1),_,Error) :-true|
        User =normal(_1),
        '-gid'(_1,__1,Flag,Error) .
'-get_gid$$$enu$1'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-get_gid$$$enu$1'(User,aborted,_,Error) :-true|
        User =aborted .
'-get_gid$$$enu$1'(User,disconnected,_,Error) :-true|
        User =disconnected .
'-get_gids$$$enu$1'(User,normal(__1),_,Error) :-true|
        User =normal(_1),
        '-normal$$$list$2'(_1,__1,Flag,Error) .
'-get_gids$$$enu$1'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-get_gids$$$enu$1'(User,aborted,_,Error) :-true|
        User =aborted .
'-get_gids$$$enu$1'(User,disconnected,_,Error) :-true|
        User =disconnected .
'+gid'(User,OS,_,Error) :-integer(User)|
        User =OS .
otherwise .
'+gid'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'-get_users$$$enu$1'(User,normal(__1),_,Error) :-true|
        User =normal(_1),
        '-group_members'(_1,__1,Flag,Error) .
'-get_users$$$enu$1'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-get_users$$$enu$1'(User,aborted,_,Error) :-true|
        User =aborted .
'-get_users$$$enu$1'(User,disconnected,_,Error) :-true|
        User =disconnected .
'-get_all_info$$$enu$2'(User,normal(__1),_,Error) :-true|
        User =normal(_1),
        '-normal$$$list$3'(_1,__1,Flag,Error) .
'-get_all_info$$$enu$2'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-get_all_info$$$enu$2'(User,aborted,_,Error) :-true|
        User =aborted .
'-get_all_info$$$enu$2'(User,disconnected,_,Error) :-true|
        User =disconnected .
'+login_info'(User,OS,_,Error) :-true|
        '+ground'(User,User2),
        '+login_info$wait'(User2,OS,Flag,Error) .
'+login_info$wait'(User2,OS,_,Error) :-wait(User2)|
        User2 =OS .
'+login_info$wait'(User2,OS,fail,Error) :-true|
        true .
'-login$$$enu$2'(User,normal(__1),_,Error) :-true|
        User =normal(_1),
        '-lid'(_1,__1,Flag,Error) .
'-login$$$enu$2'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-login$$$enu$2'(User,aborted,_,Error) :-true|
        User =aborted .
'-login$$$enu$2'(User,disconnected,_,Error) :-true|
        User =disconnected .
'+lid'(User,OS,_,Error) :-integer(User)|
        User =OS .
otherwise .
'+lid'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'-get_info$$$enu$2'(User,normal(__1),_,Error) :-true|
        User =normal(_1),
        '-login_info'(_1,__1,Flag,Error) .
'-get_info$$$enu$2'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-get_info$$$enu$2'(User,aborted,_,Error) :-true|
        User =aborted .
'-get_info$$$enu$2'(User,disconnected,_,Error) :-true|
        User =disconnected .
'-get_login$$$enu$1'(User,normal(__1),_,Error) :-true|
        User =normal(_1),
        '-normal$$$list$4'(_1,__1,Flag,Error) .
'-get_login$$$enu$1'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-get_login$$$enu$1'(User,aborted,_,Error) :-true|
        User =aborted .
'-get_login$$$enu$1'(User,disconnected,_,Error) :-true|
        User =disconnected .
'-get_all_info$$$enu$3'(User,normal(__1),_,Error) :-true|
        User =normal(_1),
        '-normal$$$list$5'(_1,__1,Flag,Error) .
'-get_all_info$$$enu$3'(User,abnormal,_,Error) :-true|
        User =abnormal .
'-get_all_info$$$enu$3'(User,aborted,_,Error) :-true|
        User =aborted .
'-get_all_info$$$enu$3'(User,disconnected,_,Error) :-true|
        User =disconnected .
'-uid'(User,OS,_,Error) :-integer(OS)|
        OS =User .
'-change_count'(User,OS,_,Error) :-integer(OS)|
        OS =User .
'-normal$$$list$1'(User,[OS|OS2],Flag,Error) :-true|
        '-user_all_info'(User1,OS,Flag,Error),
        '-normal$$$list$1$wait'(User,OS2,User1,Flag,Error) .
'-normal$$$list$1'(User,[],Flag,Error) :-true|
        User =[] .
'-normal$$$list$1$wait'(User,OS2,User1,Flag,Error) :-wait(User1)|
        User =[User1|User2],
        '-normal$$$list$1'(User2,OS2,Flag,Error) .
'-gid'(User,OS,_,Error) :-integer(OS)|
        OS =User .
'-normal$$$list$2'(User,[OS|OS2],Flag,Error) :-true|
        '-gid'(User1,OS,Flag,Error),
        '-normal$$$list$2$wait'(User,OS2,User1,Flag,Error) .
'-normal$$$list$2'(User,[],Flag,Error) :-true|
        User =[] .
'-normal$$$list$2$wait'(User,OS2,User1,Flag,Error) :-wait(User1)|
        User =[User1|User2],
        '-normal$$$list$2'(User2,OS2,Flag,Error) .
'-normal$$$list$3'(User,[OS|OS2],Flag,Error) :-true|
        '-group_info'(User1,OS,Flag,Error),
        '-normal$$$list$3$wait'(User,OS2,User1,Flag,Error) .
'-normal$$$list$3'(User,[],Flag,Error) :-true|
        User =[] .
'-normal$$$list$3$wait'(User,OS2,User1,Flag,Error) :-wait(User1)|
        User =[User1|User2],
        '-normal$$$list$3'(User2,OS2,Flag,Error) .
'-lid'(User,OS,_,Error) :-integer(OS)|
        OS =User .
'-login_info'(User,OS,_,Error) :-true|
        '-ground'(OS2,OS),
        OS2 =User .
'-normal$$$list$4'(User,[OS|OS2],Flag,Error) :-true|
        '-lid'(User1,OS,Flag,Error),
        '-normal$$$list$4$wait'(User,OS2,User1,Flag,Error) .
'-normal$$$list$4'(User,[],Flag,Error) :-true|
        User =[] .
'-normal$$$list$4$wait'(User,OS2,User1,Flag,Error) :-wait(User1)|
        User =[User1|User2],
        '-normal$$$list$4'(User2,OS2,Flag,Error) .
'-normal$$$list$5'(User,[OS|OS2],Flag,Error) :-true|
        '-normal$$$vector$1'(User1,OS,Flag,Error),
        '-normal$$$list$5$wait'(User,OS2,User1,Flag,Error) .
'-normal$$$list$5'(User,[],Flag,Error) :-true|
        User =[] .
'-normal$$$list$5$wait'(User,OS2,User1,Flag,Error) :-wait(User1)|
        User =[User1|User2],
        '-normal$$$list$5'(User2,OS2,Flag,Error) .
'+user_all_info'({_1,_2,_3,_4,_5,_6,_7,_8},OS,_,Error) :-true|
        '+user_all_info$wait'({__1,__2,__3,__4,__5,__6,__7,__8},OS,Flag,Error),
        '+user_name'(_1,__1,Flag,Error),
        '+password'(_2,__2,Flag,Error),
        '+uid'(_3,__3,Flag,Error),
        '+priority'(_4,__4,Flag,Error),
        '+directory_name'(_5,__5,Flag,Error),
        '+pe_number'(_6,__6,Flag,Error),
        '+entry_point'(_7,__7,Flag,Error),
        '+comment_list'(_8,__8,Flag,Error) .
otherwise .
'+user_all_info'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'+user_all_info$wait'({__1,__2,__3,__4,__5,__6,__7,__8},OS,_,Error) :-wait(__1),wait(__2),wait(__3),wait(__4),wait(__5),wait(__6),wait(__7),wait(__8)|
        {__1,__2,__3,__4,__5,__6,__7,__8} =OS .
'+user_all_info$wait'(User,OS,fail,Error) :-true|
        true .
'-user_info'(User,{__1,__2,__3,__4,__5,__6},_,Error) :-true|
        User ={_1,_2,_3,_4,_5,_6},
        '-user_name'(_1,__1,Flag,Error),
        '-priority'(_2,__2,Flag,Error),
        '-directory_name'(_3,__3,Flag,Error),
        '-pe_number'(_4,__4,Flag,Error),
        '-entry_point'(_5,__5,Flag,Error),
        '-comment_list'(_6,__6,Flag,Error) .
'+group_info'({_1,_2,_3,_4},OS,_,Error) :-true|
        '+group_info$wait'({__1,__2,__3,__4},OS,Flag,Error),
        '+group_name'(_1,__1,Flag,Error),
        '+gid'(_2,__2,Flag,Error),
        '+group_members'(_3,__3,Flag,Error),
        '+comment_list'(_4,__4,Flag,Error) .
otherwise .
'+group_info'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'+group_info$wait'({__1,__2,__3,__4},OS,_,Error) :-wait(__1),wait(__2),wait(__3),wait(__4)|
        {__1,__2,__3,__4} =OS .
'+group_info$wait'(User,OS,fail,Error) :-true|
        true .
'-group_members'(User,[OS|OS2],Flag,Error) :-true|
        '-uid'(User1,OS,Flag,Error),
        '-group_members$wait'(User,OS2,User1,Flag,Error) .
'-group_members'(User,[],Flag,Error) :-true|
        User =[] .
'-group_members$wait'(User,OS2,User1,Flag,Error) :-wait(User1)|
        User =[User1|User2],
        '-group_members'(User2,OS2,Flag,Error) .
'-normal$$$vector$1'(User,{__1,__2,__3},_,Error) :-true|
        User ={_1,_2,_3},
        '-user_name'(_1,__1,Flag,Error),
        '-lid'(_2,__2,Flag,Error),
        '-login_info'(_3,__3,Flag,Error) .
'+priority'(User,OS,_,Error) :-integer(User)|
        User =OS .
otherwise .
'+priority'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'+directory_name'( *,OS,_,Error) :-true|
         * =OS .
'+directory_name'(User,OS,_,Error) :-string(User,_,_)|
        User =OS .
otherwise .
'+directory_name'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'+pe_number'( *,OS,_,Error) :-true|
         * =OS .
'+pe_number'(User,OS,_,Error) :-integer(User)|
        User =OS .
otherwise .
'+pe_number'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'+entry_point'( :(_1,_2),OS,_,Error) :-true|
        '+entry_point$wait'( :(__1,__2),OS,Flag,Error),
        '+:$$$enu$1'(_1,__1,Flag,Error),
        '+predicate'(_2,__2,Flag,Error) .
otherwise .
'+entry_point'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'+entry_point$wait'(User,OS,fail,Error) :-true|
        true .
'+entry_point$wait'( :(__1,__2),OS,_,Error) :-wait(__1),wait(__2)|
         :(__1,__2) =OS .
'+:$$$enu$1'( ::(_1,_2),OS,_,Error) :-true|
        '+:$$$enu$1$wait'( ::(__1,__2),OS,Flag,Error),
        '+packagename'(_1,__1,Flag,Error),
        '+modulename'(_2,__2,Flag,Error) .
otherwise .
'+:$$$enu$1'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'+:$$$enu$1$wait'(User,OS,fail,Error) :-true|
        true .
'+:$$$enu$1$wait'( ::(__1,__2),OS,_,Error) :-wait(__1),wait(__2)|
         ::(__1,__2) =OS .
'-user_name'(User,OS,_,Error) :-string(OS,_,_)|
        OS =User .
'-priority'(User,OS,_,Error) :-integer(OS)|
        OS =User .
'-directory_name'(User, *,_,Error) :-true|
        User = * .
'-directory_name'(User,OS,_,Error) :-string(OS,_,_)|
        User =OS .
'-pe_number'(User, *,_,Error) :-true|
        User = * .
'-pe_number'(User,OS,_,Error) :-integer(OS)|
        User =OS .
'-entry_point'(User, :(__1,__2),_,Error) :-true|
        User = :(_1,_2),
        '-:$$$enu$1'(_1,__1,Flag,Error),
        '-predicate'(_2,__2,Flag,Error) .
'-:$$$enu$1'(User, ::(__1,__2),_,Error) :-true|
        User = ::(_1,_2),
        '-packagename'(_1,__1,Flag,Error),
        '-modulename'(_2,__2,Flag,Error) .
'-user_all_info'(User,{__1,__2,__3,__4,__5,__6,__7,__8},_,Error) :-true|
        User ={_1,_2,_3,_4,_5,_6,_7,_8},
        '-user_name'(_1,__1,Flag,Error),
        '-password'(_2,__2,Flag,Error),
        '-uid'(_3,__3,Flag,Error),
        '-priority'(_4,__4,Flag,Error),
        '-directory_name'(_5,__5,Flag,Error),
        '-pe_number'(_6,__6,Flag,Error),
        '-entry_point'(_7,__7,Flag,Error),
        '-comment_list'(_8,__8,Flag,Error) .
'-group_info'(User,{__1,__2,__3,__4},_,Error) :-true|
        User ={_1,_2,_3,_4},
        '-group_name'(_1,__1,Flag,Error),
        '-gid'(_2,__2,Flag,Error),
        '-group_members'(_3,__3,Flag,Error),
        '-comment_list'(_4,__4,Flag,Error) .
'+predicate'(In,Out,Flag,Error) :-vector(In,Size)|
        '+predicate$vect1'(In,Out,0,Size,Flag,Error) .
'+predicate'(User,OS,_,Error) :-atom(User)|
        User =OS .
otherwise .
'+predicate'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'+predicate$vect1'(In,Out,Pos,Size,Flag,Error) :-Pos \=Size|
        vector_element(In,Pos,Elm,Nin),
        '+predicate$ground$1'(Elm,Elm2,Flag,Error),
        Npos :=Pos + 1,
        '+predicate$vect2'(Elm2,In,Out,Npos,Size,Flag,Error) .
'+predicate$vect1'(In,Out,Size,Size,Flag,Error) :-true|
        In =Out .
'+predicate$vect2'(Elm,In,Out,Pos,Size,Flag,Error) :-wait(Elm)|
        '+predicate$vect1'(In,Out,Pos,Size,Flag,Error) .
'+predicate$vect2'(Elm,In,Out,Pos,Size,fail,Error) :-true|
        true .
'+packagename'(User,OS,_,Error) :-atom(User)|
        User =OS .
otherwise .
'+packagename'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'+modulename'(User,OS,_,Error) :-atom(User)|
        User =OS .
otherwise .
'+modulename'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'+comment_list'([In1|In2],Out,Flag,Error) :-true|
        '+comment_list$string$1'(In1,In11,Flag,Error),
        '+comment_list$list0'(In11,In2,Top,Top,Out,Flag,Error) .
'+comment_list'([],Out,Flag,Error) :-true|
        []=Out .
'+comment_list$list0'(In11,In2,Top,Tail,Out,Flag,Error) :-wait(In11)|
        '+comment_list$list1'(In2,Top,Tail2,Out,Flag,Error),
        Tail =[In11|Tail2] .
'+comment_list$list0'(In11,In2,Top,Tail,Out,fail,Error) :-true|
        true .
'+comment_list$list1'([],Top,Tail,Out,Flag,Error) :-true|
        Tail =[],
        Out =Top .
'+comment_list$list1'([In1|In2],Top,Tail,Out,Flag,Error) :-true|
        '+comment_list$string$1'(In1,In11,Flag,Error),
        '+comment_list$list0'(In11,In2,Top,Tail,Out,Flag,Error) .
'+comment_list$string$1'(User,OS,_,Error) :-string(User,_,_)|
        User =OS .
otherwise .
'+comment_list$string$1'(User,OS,Flag,Error) :-true|
        Flag = fail,
        raise_error(Error,User) .
'-predicate'(Out,In,Flag,Error) :-vector(In,Size),vector_element(In,0,Elm)|
        '-predicate$vect1'(In,Elm,1,Size,In2,Flag,Error),
        '-predicate$wait'(In2,Out,Flag,Error) .
'-predicate'(User,OS,_,Error) :-atom(OS)|
        User =OS .
'-predicate$wait'(In2,Out,Flag,Error) :-wait(In2)|
        Out =In2 .
'-predicate$vect1'(Vector,Elm,Pos,Size,In2,Flag,Error) :-Pos \=Size|
        '-predicate$ground$1'(Elm2,Elm,Flag,Error),
        '-predicate$vect2'(Vector,Pos,Elm2,Size,In2,Flag,Error) .
'-predicate$vect1'(Vector,Elm,Size,Size,In2,Flag,Error) :-true|
        '-predicate$ground$1'(Elm2,Elm,Flag,Error),
        '-predicate$vect2'(Vector,Size,Elm2,Size,In2,Flag,Error) .
'-predicate$vect2'(Vector,Pos,Elm2,Size,In2,Flag,Error) :-wait(Elm2),Pos \=Size,vector_element(Vector,Pos,Nelm)|
        Npos :=Pos + 1,
        '-predicate$vect1'(Vector,Nelm,Npos,Size,In2,Flag,Error) .
'-predicate$vect2'(Vector,Size,Elm2,Size,In2,Flag,Error) :-wait(Elm2)|
        Vector =In2 .
'-packagename'(User,OS,_,Error) :-atom(OS)|
        OS =User .
'-modulename'(User,OS,_,Error) :-atom(OS)|
        OS =User .
'-comment_list'(User,[OS|OS2],Flag,Error) :-true|
        '-comment_list$string$1'(User1,OS,Flag,Error),
        '-comment_list$wait'(User,OS2,User1,Flag,Error) .
'-comment_list'(User,[],Flag,Error) :-true|
        User =[] .
'-comment_list$wait'(User,OS2,User1,Flag,Error) :-wait(User1)|
        User =[User1|User2],
        '-comment_list'(User2,OS2,Flag,Error) .
'-comment_list$string$1'(User,OS,_,Error) :-string(OS,_,_)|
        OS =User .
'-password'(User,OS,_,Error) :-string(OS,_,_)|
        OS =User .
'+group_members'([In1|In2],Out,Flag,Error) :-true|
        '+uid'(In1,In11,Flag,Error),
        '+group_members$list0'(In11,In2,Top,Top,Out,Flag,Error) .
'+group_members'([],Out,Flag,Error) :-true|
        []=Out .
'+group_members$list0'(In11,In2,Top,Tail,Out,Flag,Error) :-wait(In11)|
        '+group_members$list1'(In2,Top,Tail2,Out,Flag,Error),
        Tail =[In11|Tail2] .
'+group_members$list0'(In11,In2,Top,Tail,Out,fail,Error) :-true|
        true .
'+group_members$list1'([],Top,Tail,Out,Flag,Error) :-true|
        Tail =[],
        Out =Top .
'+group_members$list1'([In1|In2],Top,Tail,Out,Flag,Error) :-true|
        '+uid'(In1,In11,Flag,Error),
        '+group_members$list0'(In11,In2,Top,Tail,Out,Flag,Error) .
'-group_name'(User,OS,_,Error) :-string(OS,_,_)|
        OS =User .
'+predicate$ground$1'(User,OS,_,Error) :-true|
        '+ground'(User,User2),
        '+predicate$ground$1$wait'(User2,OS,Flag,Error) .
'+predicate$ground$1$wait'(User2,OS,_,Error) :-wait(User2)|
        User2 =OS .
'+predicate$ground$1$wait'(User2,OS,fail,Error) :-true|
        true .
'-predicate$ground$1'(User,OS,_,Error) :-true|
        '-ground'(OS2,OS),
        OS2 =User .
%%%%% system defined protocols %%%%%%%%%%
'+ground'(X, Y) :- list(X) | '$$groundl'(X, Y).
'+ground'(X, Y) :- vector(X,Size), Size \= 0 | 
        '$$groundv'(X, 0, Size, X2),
        '$$groundv2'(X2, Y).
otherwise.
'+ground'(X, Y) :- wait(X) | Y = X.
'-ground'(X, Y) :- list(Y) | '$$groundl'(Y, X).
'-ground'(X, Y) :- vector(Y,Size), Size \= 0 | 
        '$$groundv'(Y, 0, Size, Y2),
        '$$groundv2'(Y2, X).
otherwise.
'-ground'(X, Y) :- wait(Y) | Y = X.
'$$groundl'([X1|X2], Y) :- true | '+ground'(X1,X11),
        '$$groundl2'(X11, X2, Y).
'$$groundl'([], Y) :- true | Y = [].
'$$groundl2'(X11, X2, Y) :- wait(X11) |
        '$$groundl31'(X2, [X11|Tail], Tail, Y).
'$$groundl31'([X1|X2], Top, Tail, Y) :- true |
        '+ground'(X1,X11),
        '$$groundl32'(X11, X2, Top, Tail, Y).
'$$groundl31'([], Top, Tail, Y) :- true |
        Tail = [],
        Top = Y.
'$$groundl32'(X11, X2, Top, Tail, Y) :- wait(X11), X2 \= [] |
        Tail = [X11|Tail2],
        '$$groundl31'(X2, Top, Tail2, Y).
'$$groundl32'(X11, [], Top, Tail, Y) :- wait(X11) |
        Tail = [X11],
        Y = Top.
'$$groundv2'(X2, Y) :- wait(X2) | X2 = Y.
'$$groundv'(X, Pos, Size, X2) :- Pos \= Size |
        vector_element(X, Pos, Elm, NX),
        '+ground'(Elm,Elm2),
        Npos := Pos + 1,
        '$$groundv3'(Elm2, NX, Npos, Size, X2).
'$$groundv3'(Elm, X, Pos, Size, X2) :- wait(Elm), Pos \= Size |
        vector_element(X, Pos, Nelm, NX),
        '+ground'(Nelm, Nelm2),
        Npos := Pos + 1,
        '$$groundv3'(Nelm2, NX, Npos, Size, X2).
'$$groundv3'(Elm, X, Size, Size, X2) :- wait(Elm) |
        X = X2. 
%%%%% to raise error %%%%%%%%%%
raise_error(Info,Msg):- true |
        atom_table:cache_table(Atom),
        formatInfo(Info,[],Fstring,Atom),
        shoen:raise(pimos_tag#error,'$PIMOS$'(illegal_message_to_PIMOS,Fstring),Msg).
formatInfo([Infoatom | Info], StringList,Fstring,Atom):- 
        atom(Infoatom) |
        Atom = [get_atom_name(Infoatom,normal(InfoString)) | Atail],
        NSlist = [InfoString | StringList],
        formatInfo(Info, NSlist, Fstring, Atail).
formatInfo([], Slist, Fstring, Atom):- true |
        Atom = [],
        new_string(New,1,16),
        set_string_element(New,0,key#lf,NL),
        format(1,Slist,StringList,NL),
        builtin#append_string(StringList, Fstring).
format(1,[Info|Tail],StringList,NL):- true |
        StringList = ["Device : ",Info,NL |Stail2],
        format(2,Tail,Stail2,NL).
format(2,[Info|Tail],StringList,NL):- true |
        StringList = ["Message : ",Info,NL | Stail2],
        format(3,Tail,Stail2,NL).
format(3,[Info|Tail],StringList,NL):- true |
        StringList = [Info,NL | Stail2],
        format(3,Tail,Stail2,NL).
format(_,[],StringList,_):- true |
        StringList = [].
