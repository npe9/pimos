%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                          %
% (C)1992 Institute for New Generation Computer Technology %
% Read COPYRIGHT for detailed information.                 %
%                                                          %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% icpsi329::>sys>user>yashiro>PIMOS_TOOL>password.kl1.11, 01-May-90 15:10:58, Edit by yashiro
:- module password.
:- public encrypt/2.
:- with_macro pimos.

encrypt(In,Out) :- string(In,0,_) | In = Out.
otherwise.
encrypt(In,Out) :- string(In,Size,16) |

    filter(4,string#"ICOT",Mid1),
    filter(Size,In,Mask1),
    encrypt(4,Mid1,ICOT,Mask1,Size,Size),
    filter(Size,In,Mid),
    filter(5,string#"PIMOS",Mask),
    encrypt(Size,Mid,User,Mask,5,5),
    builtin#append_string(ICOT,User,Out).

filter(0,In,Out) :- true | In= Out.
otherwise.
filter(Size,In,Out) :- Size1 := Size-1 |
    set_string_element(In,Size1,Elem,Elem1,Mid),
    shifter(Elem,Elem1),
    filter(Size1,Mid,Out).


shifter(In,Out) :- In < 21, In1 := (In + 256) mod 256 | In1 = Out.
otherwise.
shifter(In,Out) :- In1 := In - 21 | In1 = Out.

encrypt(0,In,Out,Mask,Index,Length) :- true | In = Out.
otherwise.
encrypt(N,In,Out,Mask,1,Length) :- N1:=N-1|
    set_string_element(Mask,0,Pat,Pat,Mask1),
    set_string_element(In,N1,Elem,NewElem,Mid),
    comp(Elem,Pat,NewElem),
    encrypt(N1,Mid,Out,Mask1,Length,Length).
otherwise.
encrypt(N,In,Out,Mask,Index,Length) :- Index1:=Index-1,N1:=N-1|
    set_string_element(Mask,Index1,Pat,Pat,Mask1),
    set_string_element(In,N1,Elem,NewElem,Mid),
    comp(Elem,Pat,NewElem),
    encrypt(N1,Mid,Out,Mask1,Index1,Length).

comp(Elem,Pat,NewElem) :- Elem1 := ((Elem+Pat) mod 26 )+16#"2341"|
    Elem1 = NewElem.

set_string_element(Str,Pos,Old,New,NStr) :- true |
    string_element(Str,Pos,Old,Mid),
    set_string_element(Mid,Pos,New,NStr).
