%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                          %
% (C)1994 Institute for New Generation Computer Technology %
% Read COPYRIGHT for detailed information.                 %
%                                                          %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% icpsi183::>sys>user>hori>Pimos>v40>Loader>help.kl1.2, 23-Jul-92 10:29:50, Edit by hori

:- module kl1_compile_help.
:- with_macro pimos.
:- public list/2.
:- public item/3.
:- public command/4.

%%%%% HELP COMMAND

list(MESG0,MESG) :- true |
    MESG0 = [
        info("  COMPILE:        klb, make, translate, verify",[]),
        info("  OPTIONS:        describe, distribute, message",[]),
        info("  FILE:           cd, default_extension, ls, path, pwd",[]),
        info("  LIBRARY:        (un)load, Unload, relink, Relink",[]),
        info("  LINK:           auto_link, link, link_error, top_modules",[]),
        info("  MISC:           (un)alias, exit, help, keep/revert, show",[]),
        info("  PACKAGE:        original_package, package, working_packages",[]),
        info("  PREPROC[ESSOR]: (un)define, get/set, (un)parser, preprocess, verifier",[]),
        info("To get more info, type ""!help Item""",[])|
    MESG].

item([],MESG0,MESG) :- true | 
    MESG0 = MESG.
%%item(assemble_mode,MESG0,MESG) :- true |
%%    command(assemble_mode,MESG0,MESG).
item(compile,MESG0,MESG) :- true |
    command(verify,MESG0,MESG1),
    command(compile,MESG1,MESG2),
    command(klb,MESG2,MESG3),
    command(make,MESG3,MESG4),
    command(translate,MESG4,MESG).
item(options,MESG0,MESG) :- true |
    command(distribute,MESG0,MESG1),
    command(describe,MESG1,MESG2),
    command(message,MESG2,MESG3),
%%    command(profile,MESG3,MESG4),
    command(parallel,MESG3,MESG5),
    command(top_modules,MESG5,MESG).
item(file,MESG0,MESG) :- true |
    command(cd,MESG0,MESG1),
    command(default_extension,MESG1,MESG2),
    command(ls,MESG2,MESG3),
    command(path,MESG3,MESG4),
    command(pwd,MESG4,MESG).
item(library,MESG0,MESG) :- true |
    command(load,MESG0,MESG1),
    command(relink,MESG1,MESG2),
    command(working_packages,MESG2,MESG).
item(link,MESG0,MESG) :- true |
    command(auto_link,MESG0,MESG1),
    command(link,MESG1,MESG2),
    command(link_error,MESG2,MESG3),
    command(top_modules,MESG3,MESG).
item(misc,MESG0,MESG) :- true |
    command(alias,MESG0,MESG2),
    command(exit,MESG2,MESG3),
    command(help,MESG3,MESG4),
    command(keep,MESG4,MESG5),
    command(revert,MESG5,MESG6),
    command(show,MESG6,MESG).
item(package,MESG0,MESG) :- true |
    command(original_package,MESG0,MESG1),
    command(package,MESG1,MESG2),
    command(working_packages,MESG2,MESG).
item(preprocess,MESG0,MESG) :- true |
    command(verifier,MESG0,MESG1),
    command(parser,MESG1,MESG2),
    command(unparser,MESG2,MESG3),
    command(preprocess,MESG3,MESG).
item(option,MESG0,MESG) :- true | item(options,MESG0,MESG).
item(preproc,MESG0,MESG) :- true | item(preprocess,MESG0,MESG).
item([Item|Rest],MESG0,MESG) :- true |
    item(Item,MESG0,MESG1),
    item(Rest,MESG1,MESG).
otherwise.
item(Command,MESG0,MESG) :- true |
    command(Command,MESG0,MESG).

command(Command,MESG0,MESG) :- true | command(Command,MESG0,MESG,about).

%%%%%%%%%%%%%%%%%
% ASSEMBLE_MODE %
%%%%%%%%%%%%%%%%%
%%command(assemble_mode,MESG0,MESG,about) :- true |
%%    MESG0 = [info(string#"  !assemble_mode (user|pimos|firm)  % Set assemble mode",[])|MESG].
%%%%%%%%%%%
% COMPILE %
%%%%%%%%%%%
command(compile,MESG0,MESG,about) :- true |
    MESG0 = [
             info(string#"  !!                          % Recompile last file(s)",[]),
             info(string#"  FileName ..                 % Compile file(s)",[]),
             info(string#"  !compile FileName ..        % Compile file(s)",[])
    |MESG].
command(verify,MESG0,MESG,about) :- true |
    MESG0 = [info(string#"  !verify File ..             % Verify file",[])|MESG].
command(distribute,MESG0,MESG,about) :- true |
    MESG0 = [info(string#"  !distribute [PE .. ]        % [Re]Set distribution",[])|MESG].
command(describe,MESG0,MESG,about) :- true |
    MESG0 = [info(string#"  !describe [PreProc]         % Show options",[])|MESG].
%%command(indexing,MESG0,MESG,about) :- true |
%%    MESG0 = [info(string#"  !indexing (on|off)          % Switch indexing option",[])|MESG].
command(klb,MESG0,MESG,about) :- true |
    MESG0 = [info(string#"  !klb File ..                % Output KLB file",[])|MESG].
command(make,MESG0,MESG,about) :- true |
    MESG0 = [info(string#"  !make                       % Compile updated file(s)",[])|MESG].
command(message,MESG0,MESG,about) :- true |
    MESG0 = [info(string#"  !message (concise|verbose)  % Switch message mode",[])|MESG].
command(parallel,MESG0,MESG,about) :- true |
    MESG0 = [info(string#"  !parallel [N]               % Set max files to distribute",[])|MESG].
%%command(profile,MESG0,MESG,about) :- true |
%%    MESG0 = [info(string#"  !profile (on|off)           % Switch profiling option",[])|MESG].
command(translate,MESG0,MESG,about) :- true |
    MESG0 = [info(string#"  !translate File ..          % Output preprocessed file",[])|MESG].
%%%%%%%%
% FILE %
%%%%%%%%
command(cd,MESG0,MESG,about) :- true |
    MESG0 = [
        info(string#"  !cd                          % Move to home directory",[]),
        info(string#"  !cd Directory                % Change directory",[])
    |MESG].
command(default_extension,MESG0,MESG,about) :- true |
    MESG0 = [
        info(string#"  !default_extension [EXT ..]  % Set default file extensions",[])
    |MESG].
command(ls,MESG0,MESG,about) :- true |
    MESG0 = [
        info(string#"  !ls [Pattern .. ]            % Listing each path directories",[])
    |MESG].
command(path,MESG0,MESG,about) :- true |
    MESG0 = [
        info(string#"  !path [Path .. ]             % [Re]Set search path for source files",[])
    |MESG].
command(pwd,MESG0,MESG,about) :- true |
    MESG0 = [
        info(string#"  !pwd                         % Show current directory",[])
    |MESG].

%%%%%%%%%%%
% LIBRARY %
%%%%%%%%%%%

command(load,MESG0,MESG,about) :- true |
    MESG0 = [
        info(string#"  !load FileName ..            % Load unloaded files",[]),
        info(string#"  !Unload FileName             % Unload last loaded module(s)",[]),
        info(string#"  !unload FileName             % Unload program(s)",[]),
        info(string#"  !unload Module .. FileName   % Unload module(s)",[])
    |MESG].
command(relink,MESG0,MESG,about) :- true |
    MESG0 = [
        info(string#"  !Relink Module ..            % Relink modules",[]),
        info(string#"  !relink TopMod GoalMod ..    % Search and relink modules",[])
    |MESG].

%%%%%%%%
% LINK %
%%%%%%%%

command(auto_link,MESG0,MESG,about) :- true |
    MESG0 = [
        info(string#"  !auto_link (on|off)          % Switch auto_link option",[])
    |MESG].
command(link,MESG0,MESG,about) :- true |
    MESG0 = [
        info(string#"  !link                        % Link unresolved modules",[])
    |MESG].
command(link_error,MESG0,MESG,about) :- true |
    MESG0 = [
        info(string#"  !link_error (error|warning)  % Switch link error",[])
    |MESG].
command(top_modules,MESG0,MESG,about) :- true |
    MESG0 = [
        info(string#"  !top_modules [Module .. ]    % [Re]Set top modules to relink",[])
    |MESG].

%%%%%%%%
% MISC %
%%%%%%%%

command(alias,MESG0,MESG,about) :- true |
    MESG0 = [
        info(string#"  !alias [Comamnd]             % Show command alias(es)",[]),
        info(string#"  !alias NewCommand Comamnd    % Set command alias",[]),
        info(string#"  !unalias Command             % Reset command alias",[])
    |MESG].
command(exit,MESG0,MESG,about) :- true |
    MESG0 = [
        info(string#"  !exit                        % Terminate and exit",[])
    |MESG].
command(help,MESG0,MESG,about) :- true |
    MESG0 = [
        info(string#"  !help                        % Show command list",[])
    |MESG].
command(keep,MESG0,MESG,about) :- true |
    MESG0 = [
        info(string#"  !keep                        % Keep current options",[])
    |MESG].
command(revert,MESG0,MESG,about) :- true |
    MESG0 = [
        info(string#"  !revert                      % Revert options",[])
    |MESG].
command(show,MESG0,MESG,about) :- true |
    MESG0 = [
        info(string#"  !show [alias|param|preproc]  % Show current options and status",[])
    |MESG].

%%%%%%%%%%%
% PACKAGE %
%%%%%%%%%%%

command(original_package,MESG0,MESG,about) :- true |
    MESG0 = [
        info(string#"  !original_package (on|off)   % Switch original_package option",[])
    |MESG].
command(package,MESG0,MESG,about) :- true |
    MESG0 = [
        info(string#"  !package Package             % Set default package",[])
    |MESG].
command(working_packages,MESG0,MESG,about) :- true |
    MESG0 = [
        info(string#"  !working_packages [Pkg .. ]  % [Re]Set working packages",[])
    |MESG].

%%%%%%%%%%%%%%
% PREPROCESS %
%%%%%%%%%%%%%%
command(verifier,MESG0,MESG,about) :- true |
    MESG0 = [
        info(string#"  !verifier ILang [Checker]    % [Re]Set verifier module",[]),
        info(string#"  !verifier                    % Show verifier module(s)",[])
    |MESG].
command(get,MESG0,MESG,about) :- true |
    MESG0 = [
        info(string#"  !get [Key]                   % Get preprocess parameter value",[]),
        info(string#"  !set Key [=] [Value]         % [Re]Set preprocess parameter value",[])
    |MESG].
command(parser,MESG0,MESG,about) :- true |
    MESG0 = [
        info(string#"  !parser ILang [Parser]       % [Re]Set parser module",[]),
        info(string#"  !parser                      % Show parser module(s)",[])
    |MESG].
command(unparser,MESG0,MESG,about) :- true |
    MESG0 = [
        info(string#"  !unparser OLang [Unparser]   % [Re]Set unparser module",[]),
        info(string#"  !unparser                    % Show unparser module(s)",[])
    |MESG].
command(preprocess,MESG0,MESG,about) :- true |
    MESG0 = [
        info(string#"  !preprocess IN [OUT PP .. ]  % [Re]Set preprocessor(s)",[]),
        info(string#"  !preprocess                  % Show preprocessor(s)",[])
    |MESG].
%%%%%%%%%%%%%%%%%
% (UN)DEFINE(D) %
%%%%%%%%%%%%%%%%%
command(define,MESG0,MESG,about) :- true |
    MESG0 = [
        info(string#"  !define [Key Value]          % define [show] IF-DEF parameter",[])
    |MESG].
command(undefine,MESG0,MESG,about) :- true |
    MESG0 = [
        info(string#"  !undefine Key                % undefine IF-DEF parameter",[])
    |MESG].
%%%%%%%%%%%
% ALIASES %
%%%%%%%%%%%
command(attach,MESG0,MESG,about) :- true |
    command(preprocess,MESG0,MESG,about).
command(set,MESG0,MESG,about) :- true |
    command(get,MESG0,MESG,about).
command(preprocessor,MESG0,MESG,about) :- true |
    command(preprocess,MESG0,MESG,about).
command(preproc,MESG0,MESG,about) :- true |
    command(preprocess,MESG0,MESG,about).

%%%%%%%%%%%%%
% OTHERWISE %
%%%%%%%%%%%%%
otherwise.
command(_,MESG0,MESG,_) :- true |
    list(MESG0,MESG).
