%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                          %
% (C)1992 Institute for New Generation Computer Technology %
% Read COPYRIGHT for detailed information.                 %
%                                                          %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% icpsi522::>sys>pimos>bios>boot>jtoa.kl1.2, 31-Oct-91 12:03:29, Edit by yashiro
:- module jis_to_ascii.
:- with_macro pimos.
:- public convert/2.

convert(JIS,ASCII) :-
    string(JIS,Length,16) |
        new_string(ASCII0,Length,8),
        convert_loop(Length,JIS,ASCII0,ASCII).

convert_loop(0,_,ASCII0,ASCII) :-
    true |
        ASCII0=ASCII.
convert_loop(N,JIS,ASCII0,ASCII) :-
    N > 0,
    N1 := N - 1 |
        string_element(JIS,N1,Elem,JIS0),
        convert_element(Elem,EElem),
        set_string_element(ASCII0,N1,EElem,ASCII1),
        convert_loop(N1,JIS0,ASCII1,ASCII).

convert_element(Elem,EElem) :-
    Elem >= #"0",
    #"9" >= Elem | % "0" ~ "9"
            EElem := c#"0" + (Elem - #"0").
convert_element(Elem,EElem) :-
    Elem >= #"A",
    #"Z" >= Elem | % "A" ~ "Z"
            EElem := c#"A" + (Elem - #"A").
convert_element(Elem,EElem) :-
    Elem >= #"a",
    #"z" >= Elem | % "a" ~ "z"
            EElem := c#"a" + (Elem - #"a").
convert_element(Elem,EElem) :-
    Elem = #"." |
            EElem = c#".".
convert_element(Elem,EElem) :-
    Elem = #">" |
            EElem = c#">".
convert_element(Elem,EElem) :-
    Elem = #"<" |
            EElem = c#"<".
convert_element(Elem,EElem) :-
    Elem = #" " |
            EElem = c#" ".
convert_element(Elem,EElem) :-
    Elem = #"_" |
            EElem = c#"_".
convert_element(Elem,EElem) :-
    Elem = #":" |
            EElem = c#":".
convert_element(Elem,EElem) :-
    Elem = #";" |
            EElem = c#";".
convert_element(Elem,EElem) :-
    Elem = #"," |
            EElem = c#",".
convert_element(Elem,EElem) :-
    Elem = #"!" |
            EElem = c#"!".
convert_element(Elem,EElem) :-
    Elem = #"@" |
            EElem = c#"@".
convert_element(Elem,EElem) :-
    Elem = #"#" |
            EElem = c#"#".
convert_element(Elem,EElem) :-
    Elem = #"$" |
            EElem = c#"$".
convert_element(Elem,EElem) :-
    Elem = #"%" |
            EElem = c#"%".
convert_element(Elem,EElem) :-
    Elem = #"^" |
            EElem = c#"^".
convert_element(Elem,EElem) :-
    Elem = #"&" |
            EElem = c#"&".
convert_element(Elem,EElem) :-
    Elem = #"*" |
            EElem = c#"*".
convert_element(Elem,EElem) :-
    Elem = #"(" |
            EElem = c#"(".
convert_element(Elem,EElem) :-
    Elem = #")" |
            EElem = c#")".
convert_element(Elem,EElem) :-
    Elem = #"-" |
            EElem = c#"-".
convert_element(Elem,EElem) :-
    Elem = #"+" |
            EElem = c#"+".
convert_element(Elem,EElem) :-
    Elem = #"=" |
            EElem = c#"=".
convert_element(Elem,EElem) :-
    Elem = #"'" |
            EElem = c#"'".
convert_element(Elem,EElem) :-
    Elem = #"~" |
            EElem = c#"~".
convert_element(Elem,EElem) :-
    Elem = #"?" |
            EElem = c#"?".
convert_element(Elem,EElem) :-
    Elem = #"/" |
            EElem = c#"/".
convert_element(Elem,EElem) :-
    Elem = #"|" |
            EElem = c#"|".
convert_element(Elem,EElem) :-
    Elem = #"`" |
            EElem = c#"`".
convert_element(Elem,EElem) :-
    Elem = #"[" |
            EElem = c#"[".
convert_element(Elem,EElem) :-
    Elem = #"{" |
            EElem = c#"{".
convert_element(Elem,EElem) :-
    Elem = #"]" |
            EElem = c#"]".
convert_element(Elem,EElem) :-
    Elem = #"}" |
            EElem = c#"}".
convert_element(Elem,EElem) :-
    Elem = #"\" |
            EElem = c#"\".
convert_element(Elem,EElem) :-
    Elem = #"""" |
            EElem = c#"""".
otherwise.
convert_element(Elem,EElem) :-
    true |
            EElem = c#"?".

