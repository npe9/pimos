%(C)1992 Institute for New Generation Computer Technology
%	(Read COPYRIGHT for detailed information.)
%%% 1991.7.19

class predicate_top_icon has

nature  icon_button,icon_clear;

instance
attribute
            x,
            y,
            width:=20,
            height:=8;

%% :code(+,+,+,-)

:code(Icon,X,Y,Code):-
    Code=top_predicate;

%% :draw(+,+,+,+,+,+)

:draw(Icon,X,Y,W0,H0,Win):-
    Icon!x:=X,
    Icon!y:=Y,
    W=W0-1,
    H=H0-1,
    H_One=Icon!height/4,
    W1=W0/2,
    H1=H_One/2,

    Y1=Y +H_One,
    Y2=Y1+H_One,
    Y3=Y2+H_One,

    draw_box(Win,X,Y,W,H_One*4,L,[]),
    :execute_graphics_command(Win,L),
    %:restore(#profiler_icon_image_lib,Win,image7,X+1,Y+24,16,h7),
    true;

local

draw_box(Win,X,Y,W,H,L,T):-
    L=[
    {draw_line,{X,Y+1,X+W-1,Y+1,  2,solid,reset}},
    {draw_line,{X,Y,  X,    Y+H-1,2,solid,reset}},

    {draw_line,{X,    Y+H-1,X+W-1,Y+H-1, 1,solid,set}},
    {draw_line,{X+1,  Y+H-2,X+W-1,Y+H-2,1,solid,set}},
    {draw_line,{X+W-1,Y,    X+W-1,Y+H-1,1,solid,set}},
    {draw_line,{X+W-2,Y+2,  X+W-2,Y+H-1,1,solid,set}}|T];


end.

class predicate_bottom_icon has

nature  icon_button,icon_clear;

instance
attribute
            x,
            y,
            width:=20,
            height:=8;

%% :code(+,+,+,-)

:code(Icon,X,Y,Code):-
    Code=bottom_predicate;

%% :draw(+,+,+,+,+,+)

:draw(Icon,X,Y,W0,H0,Win):-
    Icon!x:=X,
    Icon!y:=Y,
    W=W0-1,
    H=H0-1,
    H_One=Icon!height/4,
    W1=W0/2,
    H1=H_One/2,

    Y1=Y +H_One,
    Y2=Y1+H_One,
    Y3=Y2+H_One,

    draw_box(Win,X,Y,W,H_One*4,L,[]),
    :execute_graphics_command(Win,L),
    %:restore(#profiler_icon_image_lib,Win,image8,X+1,Y+24,16,h8),
    true;

local

draw_box(Win,X,Y,W,H,L,T):-
    L=[
    {draw_line,{X,Y+1,X+W-1,Y+1,  2,solid,reset}},
    {draw_line,{X,Y,  X,    Y+H-1,2,solid,reset}},

    {draw_line,{X,    Y+H-1,X+W-1,Y+H-1, 1,solid,set}},
    {draw_line,{X+1,  Y+H-2,X+W-1,Y+H-2,1,solid,set}},
    {draw_line,{X+W-1,Y,    X+W-1,Y+H-1,1,solid,set}},
    {draw_line,{X+W-2,Y+2,  X+W-2,Y+H-1,1,solid,set}}|T];

end.

class time_top_icon has

nature icon_button,icon_clear; 

instance
attribute
            x,
            y,
            width:=8,
            height:=20;

%% :code(+,+,+,-)

:code(Icon,X,Y,Code):-
    Code=top_time;

%% :draw(+,+,+,+,+,+)

%% 371,370,363,362

:draw(Icon,X0,Y0,W0,H0,Win):-
    (X0 mod 4 == 0,!,
     X1=X0;
     X1=(X0/4)*4),
    X=X1+5,%%%%  
    (Y0 mod 2 == 0,!,
     Y=Y0;
     Y=Y0+1),
    Icon!x:=X,
    Icon!y:=Y, 
    W=W0/4-1,
    H=H0-1,
    draw_box(Win,X,Y,W0-1,H,L,[]),
    :execute_graphics_command(Win,L),
    %:restore(#profiler_icon_image_lib,Win,image9,X+1,Y+24,112,h9),
    true;

local

draw_box(Win,X,Y,W,H,L,T):-
    L=[
    {draw_line,{X,Y+1,X+W-1,Y+1,  2,solid,reset}},
    {draw_line,{X,Y,  X,    Y+H-1,2,solid,reset}},

    {draw_line,{X,    Y+H-1,X+W-1,Y+H-1, 1,solid,set}},
    {draw_line,{X+1,  Y+H-2,X+W-1,Y+H-2,1,solid,set}},
    {draw_line,{X+W-1,Y,    X+W-1,Y+H-1,1,solid,set}},
    {draw_line,{X+W-2,Y+2,  X+W-2,Y+H-1,1,solid,set}}|T];

end.

class time_bottom_icon has

nature icon_button,icon_clear; 

instance
attribute
            x,
            y,
            width:=8,
            height:=20;

%% :code(+,+,+,-)

:code(Icon,X,Y,Code):-
    Code=bottom_time;

%% :draw(+,+,+,+,+,+)

:draw(Icon,X0,Y0,W0,H0,Win):-
    (X0 mod 4 == 0,!,
     X=X0;
     X=(X0/4)*4),
    (Y0 mod 2 == 0,!,
     Y=Y0;
     Y=Y0+1),
    Icon!x:=X,
    Icon!y:=Y,
    W=W0/4-1,
    H=H0-1,
    draw_box(Win,X,Y,W0-1,H,L,[]),
    :execute_graphics_command(Win,L),
    %:restore(#profiler_icon_image_lib,Win,image10,X+1,Y+24,112,h10),
    true;

local

draw_box(Win,X,Y,W,H,L,T):-
    L=[
    {draw_line,{X,Y+1,X+W-1,Y+1,  2,solid,reset}},
    {draw_line,{X,Y,  X,    Y+H-1,2,solid,reset}},

    {draw_line,{X,    Y+H-1,X+W-1,Y+H-1, 1,solid,set}},
    {draw_line,{X+1,  Y+H-2,X+W-1,Y+H-2,1,solid,set}},
    {draw_line,{X+W-1,Y,    X+W-1,Y+H-1,1,solid,set}},
    {draw_line,{X+W-2,Y+2,  X+W-2,Y+H-1,1,solid,set}}|T];

end.

%class itest has
%:go(_):-
%   :get_contents(#ptest!mem!window_pool,[_,W]),
%   :assign_window(W),
%   new_heap_vector(Hv,1),
%   set_first(Hv,700),
%   repeat,
%    first(Hv,X),
%    :set_size(W,X,600),
%    :confirm(#messenger,"  ok  "),
%    set_first(Hv,X-1),
%    X==680,!;
%end.

class scroll_top_icon has
nature predicate_top_icon;
instance
:code(_,_,_,scroll_top):-!;
end.

class scroll_bottom_icon has
nature predicate_bottom_icon;
instance
:code(_,_,_,scroll_bottom):-!;
end.
