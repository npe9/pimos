%(C)1992 Institute for New Generation Computer Technology
%	(Read COPYRIGHT for detailed information.)
%%% 1991.11.5

class overall_runtime_monitor has

attribute s;

:create(Class,Obj,Init):-!,
    :new(Class,Obj),
    :create(#font,"font:tiny_7.font",Font),
    get_init_data(Init,5,IL1,IL2),
    :create(#runtime_window,IL1,Win),
    get_color(IL2,Color),
    set_palette(Win,Color),
    (:activate(Win);:kill(Win),fail),
    Obj!pe_font:=Font,
    Obj!window:=Win,
    :init_draw(Obj,IL2),
    %:activate(Obj),
    true;

instance

attribute   pe_font,
            window,
            palette:=test,
            pool,
            pe:=5,
            ih,
            count:=0,
            scroll:=4,
            cycle:=10,
            display:=mono,
            sx,         %%% sample rectangle
            sy,         %%% sample rectangle
            sw:=40,     %%% sample rectangle
            sh:=25;     %%% sample rectangle

:draw(Obj,String):-
    draw(String,Obj);

:init_draw(Obj,L):-!,
    set_slots(L,Obj),
    :get_size(Obj!window,W,H),
    Obj!ih:=H-40-24,%%%%% 10/8
    init_draw(Obj);

:kill(Obj):-
    :kill(Obj!window);

:activate(Obj):-
    :activate(Obj!window);

:deactivate(Obj):-
    :deactivate(Obj!window);

local

get_init_data(Init,PE,IL1,IL2):-!,
    %%% window size,position,title,   flag-off
    %%% graph  samX,samY,samW,samH,pe,scroll,cycle,display
    IL1=[title(Title),
         size(W0,H0),
         permission(out),
         position(X0,Y0),
         nature([as_inhibit_reshape]),
         margin_flag(off),
         border_flag(off)],
    IL2=[pe(PE),scroll(SC),cycle(C),display(D),
         sx(X),sy(Y),sw(W),sh(H),palette(P)],
    analyze(Init,{X0,Y0,SC,C,D,Title,W,H,P}),
    calc(SC,C,W,H,PE,W0,H0,X,Y);

analyze([],Vec):-!,
    default_check(Vec);
analyze([Vec|L],OutVec):-
    set_attr(Vec,OutVec),
    analyze(L,OutVec);

%%% Vec={X0,Y0,SC,C,D,Title,W,H}

set_attr(size(W,H),Vec):-!,
    vector_element(Vec,6,W),
    vector_element(Vec,7,H);
set_attr(position(X0,Y0),Vec):-!,
    vector_element(Vec,0,X0),
    vector_element(Vec,1,Y0);
set_attr(scroll(SC),Vec):-!,vector_element(Vec,2,SC);
set_attr(cycle(C),Vec):-!,vector_element(Vec,3,C);
set_attr(display(D),Vec):-!,vector_element(Vec,4,D);
set_attr(title(T),Vec):-!,vector_element(Vec,5,T);
set_attr(palette(P),Vec):-!,vector_element(Vec,8,P);

default_check({X0,Y0,SC,C,D,Title,W,H,P}):-
    (X0=0,!;true),
    (Y0=0,!;true),
    (SC=4,!;true),
    (C=10,!;true),
    (D=mono,!;true),
    (Title="Performance Meter",!;true),
    (W=40,!;true),
    (H=30,!;true),
    (P=test,!;true);

calc(SC,C,W,H,PE,   W0,H0,X,Y):-!,
    LabelHeight=24,%% font_13
    MarginTop=20,
    MarginLeft=48,
    MarginRight=80,%%
    MarginDown=25,%%
    SampleMarginDown=20,%%
    Interval=20,%%
    GraphWidth=C*W,
    (PE<10,!,PE0=10,!;PE0=PE),
    GraphHeight=PE0*H,
    W0=MarginLeft+GraphWidth+Interval+W+MarginRight,
    H0=LabelHeight+MarginTop+GraphHeight+MarginDown,
    X=MarginLeft+GraphWidth+Interval,
    Y=MarginTop+GraphHeight+MarginDown
        -SampleMarginDown-H*10,
    true;

set_slots([],_):-!;
set_slots([{Slot,Value}|L],Obj):-
    atomic(Value),!,  %%% bound(Value),!,
    Obj!Slot:=Value,
    set_slots(L,Obj);
set_slots([_|L],Obj):-
    Obj!Slot:=Value,
    set_slots(L,Obj);

init_draw(Obj):-!,
    draw_flame(Obj),
    draw_percent(Obj),
    draw_sample(Obj);

draw_flame(Obj):-!,
    Win=Obj!window,
    :get_size(Win,W,Height),
    H=Height-24,
    :draw_filled_rectangle(Win,0,0,W,H,0,fix,set),
    :draw_filled_rectangle(Win,0,0,W,H,1,light_paint,reset),
%%% up
    :draw_line(Win,0,1,W,1,2,solid,reset),
%%% left
    :draw_line(Win,0,0,0,H,2,solid,reset),
%%% under
    :draw_line(Win,1,H-2,W,H-2,1,solid,set),
    :draw_line(Win,0,H-1,W,H-1,1,solid,set),
%%% right
    :draw_line(Win,W-2,1,W-2,H,1,solid,set),
    :draw_line(Win,W-1,0,W-1,H-1,1,solid,set),
    inner(Obj);

inner(Obj):-
    X1=48,
    Y1=20,
    W1=Obj!sw*Obj!cycle+2,
    H1=Obj!ih+2,
    Win=Obj!window,
    :get_size(Win,W0,H0),
    X=10,
    Y=10,
    W=W0-20,
    H=H0-20-24,
    :draw_filled_rectangle(Win,X,Y,W,H,0,fix,reset),
    :draw_rectangle(Win,X1-1,Y1-1,W1,H1,1,solid,set),
    :draw_line(Win,X-2,Y+1-2,X+W,Y+1-2,2,solid,set),
    :draw_line(Win,X-2,Y-1,  X-2,  Y+H,2,solid,set);

draw_percent(Obj):-
    Margin=5,%%
    CharH=14,%%
    CharW=7,
    X=48-CharW*4-Margin,
    YTop=20,
    YDown=20+5+Obj!ih-CharH,
    U=Obj!ih/10,
    M=CharH/2,
    :draw_string(Obj!window,X,YDown-U*10,"100%",Obj!pe_font,set),
    :draw_string(Obj!window,X+CharW,YDown-U*8,"80",Obj!pe_font,set),
    :draw_line(Obj!window,X+CharW*4,YDown-U*8+M,X+CharW*4+4,YDown-U*8+M,1,solid,set),
    :draw_string(Obj!window,X+CharW,YDown-U*6,"60",Obj!pe_font,set),
    :draw_line(Obj!window,X+CharW*4,YDown-U*6+M,X+CharW*4+4,YDown-U*6+M,1,solid,set),
    :draw_string(Obj!window,X+CharW,YDown-U*4,"40",Obj!pe_font,set),
    :draw_line(Obj!window,X+CharW*4,YDown-U*4+M,X+CharW*4+4,YDown-U*4+M,1,solid,set),
    :draw_string(Obj!window,X+CharW,YDown-U*2,"20",Obj!pe_font,set),
    :draw_line(Obj!window,X+CharW*4,YDown-U*2+M,X+CharW*4+4,YDown-U*2+M,1,solid,set),
    :draw_string(Obj!window,X+CharW*2,YDown,"0",Obj!pe_font,set),
    true;

draw_sample(Obj):-
    L=["idle","GC","receive","send","compute"],
    draw_box(0,5,Obj!sx,Obj!sy,Obj!sw,Obj!sh,L,Obj);

draw_box(N,N,_,_,_,_,_,_):-!;
draw_box(C0,N,X,Y,W,H,[St|Tail],Obj):-
    C=C0*2,
    %C=9-C0,
    %C=C0,
    (Obj!display==color,!,OP=C+2,P=fix, 
    :draw_filled_rectangle(Obj!window,X,Y,W,H,1,fix,1),
    :draw_filled_rectangle(Obj!window,
        X+1,Y+1,W-2,H-2,0,P,OP);
     Obj!display==mono,!,OP=set,
     (make_pattern(C+1,P),!;
      new_string(P,256,16),
      make_pattern(C+1,P)),
     :draw_filled_rectangle(Obj!window,X,Y,W,H,1,P,OP)),
    :draw_string(Obj!window,X+W+4,Y+H/2-10,St,Obj!pe_font,set),
    draw_box(C0+1,N,X,Y+H,W,H,Tail,Obj);

%make_pattern(0, S) :-
%    set_pattern(0, S, 16#"FFFF", 16#"FFFF") ;
%make_pattern(1, S) :- 
%    set_pattern(0, S, 16#"7777", 16#"FFFF") ;
%make_pattern(2, S) :-
%    set_pattern(0, S, 16#"7777", 16#"BBBB") ;
%make_pattern(3, S) :-
%    set_pattern(0, S, 16#"5555", 16#"BBBB") ;
%make_pattern(4, S) :-
%    set_pattern(0, S, 16#"5555", 16#"AAAA", 
%                      16#"5555", 16#"BBBB") ;
%make_pattern(5, S) :-
%    set_pattern(0, S, 16#"5555", 16#"AAAA") ;
%make_pattern(6, S) :-
%    set_pattern(0, S, 16#"1111", 16#"AAAA", 
%                      16#"5555", 16#"AAAA") ;
%make_pattern(7, S) :-
%    set_pattern(0, S, 16#"1111", 16#"AAAA") ;
%make_pattern(8, S) :-
%    set_pattern(0, S, 16#"1111", 16#"2222") ;
%make_pattern(9, S) :-
%    set_pattern(0, S, 16#"0000", 16#"2222") ;
%make_pattern(10, S) :-
%    set_pattern(0, S, 16#"0000", 16#"0000") ;

%%%%%%%%%%%% pattern setting %%%%%%%%%%%%%%%%

make_pattern(1 ,S):-!,
    %%% idle
    set_pattern(0,S,16#"0000",16#"0000");
make_pattern(3 ,S):-!,
    %%% gc
    S=rough_dotted;
make_pattern(5 ,S):-!,
    %%% decode
    set_pattern(0,S,16#"0000",16#"AAAA");
make_pattern(7 ,S):-!,
    %%% encode
    set_pattern(0,S,16#"5555",16#"AAAA");
make_pattern(9 ,S):-!,
    %%% compute
    %set_pattern(0,S,16#"7777",16#"FFFF");
    S=light_paint;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

make_pattern(0, S) :-!;
make_pattern(2 ,S):-!,
    set_pattern(0,S,16#"0101",16#"0000",16#"0000",16#"0000",16#"1010",16#"0000",16#"0000",16#"0000");
make_pattern(4 ,S):-!,
    S=dotted;
make_pattern(6 ,S):-!,
    set_pattern(0,S,16#"1111",16#"AAAA",16#"5555",16#"AAAA");
make_pattern(8 ,S):-!,
    set_pattern(0,S,16#"5555",16#"BBBB");
make_pattern(10,S):-!,
    set_pattern(0,S,16#"FFFF",16#"FFFF");


set_pattern(_, X, _, _) :- unbound(X),!,fail;
set_pattern(256, _, _, _) :- ! ;
set_pattern(N, S, P1, P2) :-
    set_string_element(S, N, P1),
    set_string_element(S, N+1, P1),
    set_string_element(S, N+2, P1),
    set_string_element(S, N+3, P1),
    set_string_element(S, N+4, P2),
    set_string_element(S, N+5, P2),
    set_string_element(S, N+6, P2),
    set_string_element(S, N+7, P2),
    set_pattern(N+8, S, P1, P2), ! ;

set_pattern(_, X, _, _, _, _, _, _, _, _) :- 
    unbound(X),!,fail;
set_pattern(256, _, _, _, _, _, _, _, _, _) :- ! ;
set_pattern(N, S, P1, P2, P3, P4, P5, P6, P7, P8) :-
    set_string_element(S, N, P1),
    set_string_element(S, N+1, P1),
    set_string_element(S, N+2, P1),
    set_string_element(S, N+3, P1),
    set_string_element(S, N+4, P2),
    set_string_element(S, N+5, P2),
    set_string_element(S, N+6, P2),
    set_string_element(S, N+7, P2),
    set_string_element(S, N+8, P3),
    set_string_element(S, N+9, P3),
    set_string_element(S, N+10, P3),
    set_string_element(S, N+11, P3),
    set_string_element(S, N+12, P4),
    set_string_element(S, N+13, P4),
    set_string_element(S, N+14, P4),
    set_string_element(S, N+15, P4),
    set_string_element(S, N+16, P5),
    set_string_element(S, N+17, P5),
    set_string_element(S, N+18, P5),
    set_string_element(S, N+19, P5),
    set_string_element(S, N+20, P6),
    set_string_element(S, N+21, P6),
    set_string_element(S, N+22, P6),
    set_string_element(S, N+23, P6),
    set_string_element(S, N+24, P7),
    set_string_element(S, N+25, P7),
    set_string_element(S, N+26, P7),
    set_string_element(S, N+27, P7),
    set_string_element(S, N+28, P8),
    set_string_element(S, N+29, P8),
    set_string_element(S, N+30, P8),
    set_string_element(S, N+31, P8),
    set_pattern(N+32, S, P1, P2, P3, P4, P5, P6, P7, P8) ;

set_pattern(_, X, _, _, _, _) :- 
    unbound(X),!,fail;
set_pattern(256, _, _, _, _, _) :- ! ;
set_pattern(N, S, P1, P2, P3, P4) :-
    set_string_element(S, N, P1),
    set_string_element(S, N+1, P1),
    set_string_element(S, N+2, P1),
    set_string_element(S, N+3, P1),
    set_string_element(S, N+4, P2),
    set_string_element(S, N+5, P2),
    set_string_element(S, N+6, P2),
    set_string_element(S, N+7, P2),
    set_string_element(S, N+8, P3),
    set_string_element(S, N+9, P3),
    set_string_element(S, N+10, P3),
    set_string_element(S, N+11, P3),
    set_string_element(S, N+12, P4),
    set_string_element(S, N+13, P4),
    set_string_element(S, N+14, P4),
    set_string_element(S, N+15, P4),
    set_pattern(N+16, S, P1, P2, P3, P4) ;

get_color(L,P):-
    get_color(L,P,P0,C0);

get_color([],P,P,color):-!;
get_color([],mono,P,mono):-!;
get_color([palette(P0)|L],P,P0,C):-!,
    get_color(L,P,P0,C);
get_color([color(C)|L],P,P0,C):-!,
    get_color(L,P,P0,C);
get_color([_|L],P,P0,C):-!,
    get_color(L,P,P0,C);

set_palette(Win,mono):-!;
set_palette(Win,F):-
    (F==test,!,test(Win);
     create_pairs(L,F),
     ploop(L,Win));

ploop([F|T],Win):-!,
    F=(N,V),
    :set_color_pair(Win,N,V),
    ploop(T,Win);
ploop([],_):-!;

%%%%%%%%%%%%% color setting %%%%%%%%%%%%%%
%%%%%%%%%%%%% used 2,4,6,8,10 %%%%%%%%%%%%

test(Win):-
    :set_color_pair(Win,10,
        %% compute
        {{65000,25000,0},   {50000,65000,65000}}),
    :set_color_pair(Win,8,
        %% encode
        {{60000,63000,0},   {57600,44000,0}}),
    :set_color_pair(Win,6,
        %% decode
        {{0,62000,30000},   {40000,63000,0}}),
    :set_color_pair(Win,4,
        %% gc
        {{50000,65000,65000},   {0,50000,40000}}),
    :set_color_pair(Win,2,
        %% idle
        {{0,0,32000},       {0,20000,50000}});

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

draw(S,Obj):-
    scroll(Obj),
    Count=Obj!count,
    make_com(48+Count*Obj!sw,20+Obj!ih,Obj!sw,Obj!ih,
             Obj!display,S,L),
    Obj!count:=Count+1,
    :execute_graphics_command(Obj!window,L);

make_com(PX,PY,W,H,D,S,L):-
    string_element(S,0,Comp),
    string_element(S,1,Enc),
    string_element(S,2,Dec),
    string_element(S,3,GC),
    performance_draw(compute,Comp,PX,PY ,W,H,D,PY1,L ,L1),
    performance_draw(encode ,Enc ,PX,PY1,W,H,D,PY2,L1,L2),
    performance_draw(decode ,Dec ,PX,PY2,W,H,D,PY3,L2,L3),
    performance_draw(gc     ,GC  ,PX,PY3,W,H,D,PY4,L3,L4),
    performance_draw(idle   ,PY  ,PX,PY4,W,H,D,PY5,L4,[]);


performance_draw(Com,Rat,PX,PY,W,H0,Disp,NewPY,[V1,V2|L],L):-
    V1={draw_filled_rectangle,{PX,NewPY,W,H,1,P,Color}},
    V2={draw_rectangle,{PX,NewPY,W,H,1,solid,set}},
    (Com=\=idle,!,H=H0*Rat/100;
     H=H0-(Rat-PY)),  %%% this case only RAT-->PY0 !!!
    NewPY=PY-H,
    H>0,W>0,!,
    get_draw_pattern(Com,Disp,P,Color);
performance_draw(Com,Rat,PX,PY,W,H0,Disp,PY,L,L):-!;

get_draw_pattern(compute,mono,P,set):-!,mono_pattern(9,P);
get_draw_pattern(encode ,mono,P,set):-!,mono_pattern(7,P);
get_draw_pattern(decode ,mono,P,set):-!,mono_pattern(5,P);
get_draw_pattern(gc     ,mono,P,set):-!,mono_pattern(3,P);
get_draw_pattern(idle   ,mono,P,set):-!,mono_pattern(1,P);
get_draw_pattern(compute,color,fix,10):-!;
get_draw_pattern(encode ,color,fix,8):-!;
get_draw_pattern(decode ,color,fix,6):-!;
get_draw_pattern(gc     ,color,fix,4):-!;
get_draw_pattern(idle   ,color,fix,2):-!;

mono_pattern(N,P):-
    new_string(St,256,16),
    (make_pattern(N,St),!,P=St;
     make_pattern(N,P));

scroll(Obj):-
    Obj!count=<Obj!cycle-1,!;
scroll(Obj):-
    SC=Obj!scroll,
    C=Obj!cycle,
    W=Obj!sw,
    H=Obj!ih,
    P=Obj!pe,
    cal_scroll(SC,C,N),
    do_scroll(Obj!window,C,N,P,W,H),
    Obj!count:=C-N;

do_scroll(Win,C,N,P,W0,H0):-
    SX=48+N*W0,
    SY=20,
    DX=48,
    DY=20,
    TW=W0*(C-N),
    TH=H0,
    X=48+(C-N)*W0,
    Y=20,
    W=N*W0,
    H=H0,
    :transfer(Win,SX,SY,DX,DY,TW,TH,copy),
    :draw_filled_rectangle(Win,X,Y,W,H,1,fix,reset);

cal_scroll(SC,C,N):-!,
    N0=C/SC,
    (N0<1,!,N=1;N=N0);

create_pairs(L,default):-
L=[
(2, {{0,0,32000},        {10000,0,55535}}),
(4, {{0,0,64256},        {0,30000,64256}}),
(6, {{50000,50000,0},    {60000,50000,10000}}),
(8, {{58880,60000,20000},{65000,30000,10000}}),
(10,{{65000,20000,0},    {65535,0,5000}})
];

create_pairs(L,icot_default):-
L=[
%(0, {{8000,8000,8000},{0,0,0}}),
(2, {{19000,19000,19000},{19000,19000,19000}}),
(4, {{0,0,64500},{0,0,64500}}),
(6, {{0,40000,64500},{0,40000,64500}}),
(8, {{0,50000,32000},{0,50000,32000}}),
(10,{{64500,64500,0},{64500,64500,0}})
%(12,{{64500,64500,64500},{0,0,0}}),
%(14,{{0,64500,64500},{5000,5000,5000}})
];
create_pairs(L,matsuo):-
L=[
%(0, {{39680,63488,40192},{0,0,0}}),
(2, {{0,6400,0},{0,13312,0}}),
(4, {{0,19968,0},{0,26368,0}}),
(6, {{0,32768,0},{0,39424,0}}),
(8, {{0,45824,0},{0,52480,0}}),
(10,{{0,58880,0},{0,65280,0}})
%(12,{{0,23552,63488},{0,0,0}}),
%(14,{{61184,65280,0},{5000,5000,5000}})
]; 
create_pairs(L,taki):-
L=[
%(0, {{8000,8000,8000},{0,0,0}}),
(2, {{0,0,0},{0,0,32000}}),
(4, {{0,0,64256},{0,32000,64256}}),
(6, {{0,55296,44544},{0,64256,0}}),
(8, {{44800,64256,0},{64256,64256,0}}),
(10,{{64256,44800,15360},{64256,24832,25088}})
%(12,{{64500,64500,64500},{0,0,0}}),
%(14,{{0,64500,64500},{5000,5000,5000}})
];
create_pairs(L,sugino):-
L=[
%(0, {{8000,8000,8000},{0,0,0}}),
(2, {{500,5300,800},{500,5300,800}}),
(4, {{0,20000,500},{0,20000,500}}),
(6, {{0,32000,1000},{0,32000,1000}}),
(8, {{1300,50000,800},{1300,50000,800}}),
(10,{{0,64256,0},{0,64256,0}})
%(12,{{64500,64500,64500},{0,0,0}}),
%(14,{{0,64500,64500},{5000,5000,5000}})
];
create_pairs(L,ichiyoshi):-      
L=
[
%(0, {{8000,8000,8000},{0,0,0}}),
(2, {{1800,300,800},{1800,300,800}}),
(4, {{30000,0,30000},{30000,0,30000}}),
(6, {{59000,300,59000},{59000,300,59000}}),
(8, {{64256,30000,64256},{64256,30000,64256}}),
(10,{{64256,64256,64256},{64256,64256,64256}})
%(12,{{64500,64500,64500},{0,0,0}}),
%(14,{{0,64500,64500},{5000,5000,5000}})
];

create_pairs(L,chikayama):-
L=[
%(0, {{18000,0,0},{0,0,0}}),
(2, {{4864,0,9984},{0,7936,13824}}),
(4, {{0,14848,17920},{4864,24832,14848}}),
(6, {{14848,33792,11776},{24832,41984,8960}}),
(8, {{34816,48896,5888},{44800,52992,2816}}),
(10,{{54784,57856,0},{65280,65280,0}})
%(12,{{64500,64500,64500},{0,0,0}}),
%(14,{{65280,0,0},{5000,5000,5000}})
];


end.
