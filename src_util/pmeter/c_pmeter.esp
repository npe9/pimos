%(C)1992 Institute for New Generation Computer Technology
%	(Read COPYRIGHT for detailed information.)
class c_p_meter has

:create(Class,N,M,Interval,Obj):-
    :new(Class,Obj),
    Obj!interval := Interval,
    :init(Obj,N*M);    

:create(Class,PE,Obj):-!,
    :new(Class,Obj),
    :init(Obj,PE) ;

instance
attribute window,
          font,
          pe_font,
          interval,
          counter:= 1,
          number_of_pes:=64,
          pes;

:init(Obj,PeNumber):-
    Obj!number_of_pes:=PeNumber,
    :create(#performance_pes,PeNumber,PEs),
    Obj!pes:=PEs,
    :create(#font,"font:test_10.font",ChFont),
    :create(#font,"font:performance.font",PeFont),
    :create(#essential_window,[position(0,0)],W),
    (create_pairs(W, Color_number),!;
     :background(W,black)),
    :set_label_font(W,ChFont),
    :set_permission(W,out),
    :set_title(W,"Performance Meter"),
    :erase_cursor(W),
    :activate(W),
    Obj!font:= ChFont,
    Obj!pe_font:= PeFont,
    Obj!window:= W,
    :background1(PEs, W),
    :show_color_source(Obj),
    :show_initial(PEs,W,ChFont,PeFont),
    :show_percentage(Obj),
    :init_timer(Obj);

:show_color_source(Obj):-
    W=Obj!window,
    :set_color(W,11,drawing),
    :draw_filled_rectangle(W,950,350,100,50,0,fix,set),
    :set_color(W,10,drawing),
    :draw_filled_rectangle(W,950,400,100,50,0,fix,set),
    :set_color(W, 9,drawing),
    :draw_filled_rectangle(W,950,450,100,50,0,fix,set),
    :set_color(W, 8,drawing),
    :draw_filled_rectangle(W,950,500,100,50,0,fix,set),
    :set_color(W, 7,drawing),
    :draw_filled_rectangle(W,950,550,100,50,0,fix,set),
    :set_color(W, 6,drawing),
    :draw_filled_rectangle(W,950,600,100,50,0,fix,set),
    :set_color(W, 5,drawing),
    :draw_filled_rectangle(W,950,650,100,50,0,fix,set),
    :set_color(W, 4,drawing),
    :draw_filled_rectangle(W,950,700,100,50,0,fix,set),
    :set_color(W, 3,drawing),
    :draw_filled_rectangle(W,950,750,100,50,0,fix,set),
    :set_color(W, 2,drawing),
    :draw_filled_rectangle(W,950,800,100,50,0,fix,set);

:show_percentage(Obj) :-
    W = Obj!window,
    :create(#font,"font:kanji_28", F),
    :set_color(W, 12),
    :draw_string(W,1060,336,"100%",F,set),
    :draw_string(W,1060,436," 80%",F,set),
    :draw_string(W,1060,536," 60%",F,set),
    :draw_string(W,1060,636," 40%",F,set),
    :draw_string(W,1060,736," 20%",F,set),
    :draw_string(W,1060,836,"  0%",F,set),
    :set_color(W, 14) ;

:init_timer(Obj):-
    init_timer(Obj!window,Obj!pe_font);
:count(Obj):-
    C = Obj!counter,
    Obj!counter:= C+1,
    convert_count(C,String),
%    convert_time(C,String),
    :draw_string(Obj!window,905,5,String,Obj!pe_font,set);
%    divide_with_remainder(C,10,Syow,Amari),
%    (Amari == 0,!,
%      :show_total(Obj!pes,Obj!window,Obj!font);
%     true)    ;

:cpu_performance(Obj,PeNo,Percent):-
    :get_pe(Obj!pes,PeNo,PE),
    :cpu_performance(PE,Percent,Obj!window,Obj!pe_font,Obj!pes!numbers);

:demo(Obj):-
    Number=Obj!number_of_pes,
    demo(10,Number-1,100,Obj);

%:putb(Obj,Data):-
%    string(Data,65,16),
%    string_element(Data,0,ID),
%    substring(Data,1,64,String),
%    execute(ID,String,Obj);


:draw(Obj,String):-!,
    display_percentage(0,Obj!number_of_pes,String,Obj),
    :count(Obj);
 
:kill(Obj):-!,
    :kill(Obj!window);    

local

gen_data(File,Data,PeNumber):-
    gen(100,PeNumber,Data,File);

gen(0,_,_,_) :- !;
gen(Counter,PeNumber,Data,File):-
    gen_one(0,PeNumber,Counter,Data),
    :putt(File,Data),:putc(File,key#lf),
    gen(Counter-1,PeNumber,Data,File);

gen_one(P,P,_,_):- !;
gen_one(P,PeNumber,Number,Data):-
    Percentage is (Number*10+P*10) mod 100,
    set_string_element(Data,P+1,Percentage),
    gen_one(P+1,PeNumber,Number,Data);

display_percentage(P,P,_,_):- !;
display_percentage(P,L,S,Obj):-
    Po = 5 * P,
    Po2 = Po + 1,
    Po3 = Po + 2,
    Po4 = Po + 3,
    string_element(S, Po, Idling1),
    string_element(S, Po2, Idling2),
    string_element(S, Po3, Running1),
    string_element(S, Po4, Running2),
    Idling = 65536*Idling1 + Idling2,
    Running = 65536*Running1 + Running2,
    change_to_percentage(Idling,Running, Percent),
    :cpu_performance(Obj,P,Percent),
    display_percentage(P+1,L,S,Obj);

change_to_percentage(I,R,Percent) :-
    I=0,R=0 ,!, Percent = 0 ;
change_to_percentage(I,R,Percent) :-
    2147483647 - I =< R, !,
    Percent = (R * 100) / 2147483647 ;
change_to_percentage(I,R,Percent) :-
    2147483647 - R =< I, !,
    Percent = (R * 100) / 2147483647 ;
change_to_percentage(I,R,Percent) :-
    Percent = (R * 100) / (I+R) ;

create_pairs(W,ten_colors):-      %%% RGB
    :set_color_pair(W,0, {{8000,8000,8000},{0,0,0}}),    %%% Background
%    :set_color_pair(W,1, {{0,0,0},{64500,64500,64500}}),    %%% 0 %
    :set_color_pair(W,2, {{0,0,0},{0,0,32000}}),
    :set_color_pair(W,4, {{0,0,64500},{0,32000,64500}}),
    :set_color_pair(W,6, {{0,57000,57000},{0,64500,0}}),
    :set_color_pair(W,8, {{32000,64500,0},{64500,64500,0}}),
    :set_color_pair(W,10,{{64500,64500,32000},{64500,64500,64500}}),
    :set_color_pair(W,12,{{64500,64500,64500},{0,0,0}}),        %%% Other
    :set_color_pair(W,14,{{0,64500,64500},{5000,5000,5000}}); %%% Counter
create_pairs(W,chikayama):-      %%% RGB
    :set_color_pair(W,0, {{18000,0,0},{0,0,0}}),    %%% Background
%    :set_color_pair(W,1, {{0,0,0},{64500,64500,64500}}),    %%% 0 %
    :set_color_pair(W,2, {{4864,0,9984},{0,7936,13824}}),
    :set_color_pair(W,4, {{0,14848,17920},{4864,24832,14848}}),
    :set_color_pair(W,6, {{14848,33792,11776},{24832,41984,8960}}),
    :set_color_pair(W,8, {{34816,48896,5888},{44800,52992,2816}}),
    :set_color_pair(W,10,{{54784,57856,0},{65280,65280,0}}),
    :set_color_pair(W,12,{{64500,64500,64500},{0,0,0}}),        %%% Other
    :set_color_pair(W,14,{{65280,0,0},{5000,5000,5000}}); %%% Counter
create_pairs(W,original):-      %%% RGB
    :set_color_pair(W,0, {{8000,8000,8000},{0,0,0}}),    %%% Background
    :set_color_pair(W,2, {{19000,19000,19000},{19000,19000,19000}}),  %%% 0 %
    :set_color_pair(W,4, {{0,0,64500},{0,0,64500}}),            %%% 25 %
    :set_color_pair(W,6, {{0,40000,64500},{0,40000,64500}}),        %%% 50 %
    :set_color_pair(W,8, {{0,50000,32000},{0,50000,32000}}),        %%% 75 %
    :set_color_pair(W,10,{{64500,64500,0},{64500,64500,0}}),        %%% 100 %
    :set_color_pair(W,12,{{64500,64500,64500},{0,0,0}}),        %%% Other
    :set_color_pair(W,14,{{0,64500,64500},{5000,5000,5000}}); %%% Counter
create_pairs(W,matsuo):-      %%% RGB
    :set_color_pair(W,0, {{39680,63488,40192},{0,0,0}}),    %%% Background
    :set_color_pair(W,2, {{0,6400,0},{0,13312,0}}),  %%% 0 %
    :set_color_pair(W,4, {{0,19968,0},{0,26368,0}}),            %%% 25 %
    :set_color_pair(W,6, {{0,32768,0},{0,39424,0}}),        %%% 50 %
    :set_color_pair(W,8, {{0,45824,0},{0,52480,0}}),        %%% 75 %
    :set_color_pair(W,10,{{0,58880,0},{0,65280,0}}),        %%% 100 %
    :set_color_pair(W,12,{{0,23552,63488},{0,0,0}}),        %%% Other
    :set_color_pair(W,14,{{61184,65280,0},{5000,5000,5000}}); %%% Counter
create_pairs(W,taki):-      %%% RGB
    :set_color_pair(W,0, {{8000,8000,8000},{0,0,0}}),    %%% Background
    :set_color_pair(W,2, {{0,0,0},{0,0,32000}}), %%% 0 %
    :set_color_pair(W,4, {{0,0,64256},{0,32000,64256}}),  %%% 25 %
    :set_color_pair(W,6, {{0,55296,44544},{0,64256,0}}), %%% 50 %
    :set_color_pair(W,8, {{44800,64256,0},{64256,64256,0}}), %%% 75 %
    :set_color_pair(W,10,{{64256,44800,15360},{64256,24832,25088}}),   %%% 100 %
    :set_color_pair(W,12,{{64500,64500,64500},{0,0,0}}),        %%% Other
    :set_color_pair(W,14,{{0,64500,64500},{5000,5000,5000}}); %%% Counter
create_pairs(W,sugino):-      %%% RGB
    :set_color_pair(W,0, {{8000,8000,8000},{0,0,0}}),    %%% Background
    :set_color_pair(W,2, {{500,5300,800},{500,5300,800}}),      %%% 0 %
    :set_color_pair(W,4, {{0,20000,500},{0,20000,500}}),     %%% 25 %
    :set_color_pair(W,6, {{0,32000,1000},{0,32000,1000}}),   %%% 50 %
    :set_color_pair(W,8, {{1300,50000,800},{1300,50000,800}}),   %%% 75 %
    :set_color_pair(W,10,{{0,64256,0},{0,64256,0}}),    %%% 100 %
    :set_color_pair(W,12,{{64500,64500,64500},{0,0,0}}),        %%% Other
    :set_color_pair(W,14,{{0,64500,64500},{5000,5000,5000}}); %%% Counter
create_pairs(W,ichiyoshi):-      %%% RGB
    :set_color_pair(W,0, {{8000,8000,8000},{0,0,0}}),    %%% Background
    :set_color_pair(W,2, {{1800,300,800},{1800,300,800}}),      %%% 0 %
    :set_color_pair(W,4, {{30000,0,30000},{30000,0,30000}}),     %%% 25 %
    :set_color_pair(W,6, {{59000,300,59000},{59000,300,59000}}),   %%% 50 %
    :set_color_pair(W,8, {{64256,30000,64256},{64256,30000,64256}}),  %%% 75 %
    :set_color_pair(W,10,{{64256,64256,64256},{64256,64256,64256}}),  %%% 100 %
    :set_color_pair(W,12,{{64500,64500,64500},{0,0,0}}),        %%% Other
    :set_color_pair(W,14,{{0,64500,64500},{5000,5000,5000}}); %%% Counter
create_pairs(W,abort) :-
    create_pairs(W,original) ;
get_number_of_pes(PeNumber):-
    ItemsList=[ {"8", common,8,_},
                {"16",common,16,_},
                {"24",common,24,_},
                {"32",common,32,_},
                {"64",common,64,_}],
    :create(#menu,[items_list(ItemsList)],Menu),
    :set_title(Menu,"Choose"),
    :activate(Menu),
    :read(Menu,PeNumber),:kill(Menu);

get_number_of_color_pairs(Color):-
    ItemsList=[ {"10_colors", common,ten_colors,_},
                {"Chikayama",common,chikayama,_},
                {"Taki",common,taki,_},
                {"Sugino",common,sugino,_},
                {"Ichiyoshi",common,ichiyoshi,_},
                {"Matsuo",common,matsuo,_},
                {"original",common,original,_}],
    :create(#menu,[items_list(ItemsList)],Menu),
    :set_title(Menu,"Choose"),
    :activate(Menu),
    :read(Menu,Color),:kill(Menu);
    

demo(0,_,_,_):- !;
demo(C,Number,Percent,Obj):- Percent < 0,!,
    demo(C,Number,100,Obj);
demo(C,Number,Percent,Obj):-
    demo_loop(Number,Percent,Obj),
    :count(Obj),
    demo(C-1,Number,Percent-10,Obj);

demo_loop(-1,_,_):- !;
demo_loop(PeNo,Percent,Obj):- Percent < 0,!,
    demo_loop(PeNo,100,Obj);
demo_loop(PeNo,Percent,Obj):-
    :cpu_performance(Obj,PeNo,Percent),
    demo_loop(PeNo-1,Percent-18,Obj);
%    demo_loop(PeNo-1,Percent-25,Obj);

init_timer(W,Font):-
    :draw_filled_rectangle(W,900,0,335,50,3,dotted,set),
    :set_color(W, 14),
    :draw_string(W,905,5,"00000000",Font,set) ;
%    :draw_string(W,905,5,"00:00:00",Font,set);

%convert_time(No,String):-
%    divide_with_remainder(No,60,Min1,Sec),
%    divide_with_remainder(Min1,60,Hour,Min),
%    String = "00:00:00",
%    :get_number_string(#symbolizer,Sec,SSec),
%    :get_number_string(#symbolizer,Min,SMin),
%    :get_number_string(#symbolizer,Hour,SHour),
%    set_element(String,0,SHour),
%    set_element(String,3,SMin),
%    set_element(String,6,SSec);

convert_count(No,String):-
    :get_number_string(#symbolizer,No,10,8,String) ;

set_element(String,P,S):-
    string(S,L,_),
    (L == 2,!,
        set_substring(String,P,2,S);
     set_substring(String,P,1,"0"),
        set_substring(String,P+1,1,S));
end.


class performance_pes has
:create(Class,Number,PEs):-
    :new(Class,PEs),
    :create(#hash_index,HashIndex,64),
    PEs!pool:=HashIndex,
    :initiate(PEs,Number);

instance 
    attribute

    fep,
    numbers,
    pool;

:get_pe(PEs,No,PE):-
    :get_at(PEs!pool,PE,No);
:set_pe(PEs,No,PE):-
    :add_at(PEs!pool,PE,No);

:initiate(PEs,Number):-
    configuration(Number,config(X,Y,Fep,Logical,Physical,Maintenance)),
    :freeze(#frozen_term,Fep,Freeze),
    PEs!fep:=Freeze,
  ( Number=<16, !, N = x4 ;
    Number>16, !, N = x1 ),
    PEs!numbers := N,
    create_pes(Logical,Physical,Maintenance,X,Y,PEs);

:background1(PEs, Win) :-
    :set_color(Win,12,drawing),
    background(Win) ;

:show_initial(PEs,Win,Font,PeFont):-
    :set_color(Win,12,drawing),
%    background(Win),
    show_initial(0,PEs,Win,Font,PeFont),
    :show_fep(PEs,Win,Font,PeFont);
%    show_total_initiate(0,PEs,Win,Font);   %%% 88.11.18 Furuichi
:show_logical(PEs,Win,Font):-
    show_logical(0,PEs,Win,Font);
:show_physical(PEs,Win,Font):-
    show_physical(0,PEs,Win,Font);
:show_maintenance(PEs,Win,Font):-
    show_maintenance(0,PEs,Win,Font);

:show_fep(PEs,Win,Font,PeFont):-
    :melt(PEs!fep,Fep),
    show_fep(Fep,Win,Font,PEs!numbers);

:show_total(PEs,Win,Font):-
    show_total(0,PEs,Win,Font);
local

%create_pes([],[],[],_,_,_):-!;
create_pes([Logical|[]],[Physical|[]],[Maintenance|[]],X,Y,PEs):-
    create_pes_y(Logical,Physical,Maintenance,X,Y,PEs,bottom);
create_pes([Logical|LT],[Physical|PT],[Maintenance|MT],X,Y,PEs):-
    create_pes_y(Logical,Physical,Maintenance,X,Y,PEs,_),
    create_pes(LT,PT,MT,1,Y+1,PEs);

%create_pes_y([],[],[],_,_,_):- !;
create_pes_y([Logical|[]],[Physical|[]],[Maintenance|[]],X,Y,PEs,Bottom):-
    :create(#performance_pe,PE),
    :set_x_position(PE,X),
    :set_y_position(PE,Y),
    :set_logical_address(PE,Logical),
    :set_physical_address(PE,Physical),
    :set_maintenance_address(PE,Maintenance),
    :set_last_status(PE,100),
    (Bottom == bottom,!,
        :set_hand(PE,no);
     :set_hand(PE,down)),
    :set_pe(PEs,Logical,PE);

create_pes_y([Logical|LT],[Physical|PT],[Maintenance|MT],X,Y,PEs,Bottom):-
    :create(#performance_pe,PE),
    :set_x_position(PE,X),
    :set_y_position(PE,Y),
    :set_logical_address(PE,Logical),
    :set_physical_address(PE,Physical),
    :set_maintenance_address(PE,Maintenance),
    :set_last_status(PE,100),
    (Bottom == bottom,!,
        :set_hand(PE,right);
     :set_hand(PE,right_and_down)),
    :set_pe(PEs,Logical,PE),
    create_pes_y(LT,PT,MT,X+1,Y,PEs,Bottom);

background(Win):-
    :draw_filled_rectangle(Win,900,50,380,894,0,dotted,set);
    

show_initial(64,_,_,_,_):- !;
show_initial(PeNo,PEs,Win,Font,PeFont):-
    :get_at(PEs!pool,PE,PeNo),!,
    :show_initial(PE,Win,Font,PeFont,PEs!numbers),
    show_initial(PeNo+1,PEs,Win,Font,PeFont);
show_initial(_,_,_,_,_);

show_physical(64,_,_,_):- !;
show_physical(PeNo,PEs,Win,Font):-
    :get_at(PEs!pool,PE,PeNo),!,
    :show_physical(PE,Win,Font,PEs!numbers),
    show_physical(PeNo+1,PEs,Win,Font);
show_physical(_,_,_,_);

show_logical(64,_,_,_):- !;
show_logical(PeNo,PEs,Win,Font):-
    :get_at(PEs!pool,PE,PeNo),!,
    :show_logical(PE,Win,Font,PEs!numbers),
    show_logical(PeNo+1,PEs,Win,Font);
show_logical(_,_,_,_);

show_maintenance(64,_,_,_):- !;
show_maintenance(PeNo,PEs,Win,Font):-
    :get_at(PEs!pool,PE,PeNo),!,
    :show_maintenance(PE,Win,Font,PEs!numbers),
    show_maintenance(PeNo+1,PEs,Win,Font);
show_maintenance(_,_,_,_);

show_total_initiate(64,_,_,_):- !;
show_total_initiate(PeNo,PEs,Win,Font):-
    :get_at(PEs!pool,PE,PeNo),!,
    :logical_address(PE,No),
    X = 900,Y = 880-No*13,
    :pe_number_string(PE,PeNo,String),
    :draw_string(Win,X,Y,String,Font,set),
    show_total_initiate(PeNo+1,PEs,Win,Font);
show_total_initiate(_,_,_,_);

show_total(64,_,_,_):- !;
show_total(PeNo,PEs,Win,Font):-
    :get_at(PEs!pool,PE,PeNo),!,
    :show_total(PE,Win,Font),
    show_total(PeNo+1,PEs,Win,Font);
show_total(_,_,_,_);

show_fep([],_,_,_):- !;
show_fep([{XX,YY,Name}|Fep],Win,Font,x4):-
    position(x4,XX,YY,X,Y),
    :draw_filled_rectangle(Win,X+55,Y+20,70,30,0,dotted,set), %%% Shadow
    :draw_filled_rectangle(Win,X+35,Y,70,30,3,fix,reset),        %%% Clear
    :draw_filled_rectangle(Win,X+35,Y,70,30,3,dotted,set),       %%% Draw
    :draw_string(Win,X+100,Y+31,Name,Font,set),                %%% FEP Name
%    :draw_filled_rectangle(Win,X+55,Y+20,70,30,0,dotted,set), %%% Shadow
%    :draw_filled_rectangle(Win,X+35,Y,70,30,3,fix,reset),        %%% Clear
%    :draw_filled_rectangle(Win,X+35,Y,70,30,3,dotted,set),       %%% Draw
%    :draw_string(Win,X+100,Y+31,Name,Font,set),                %%% FEP Name
    fep_hand(YY,X,Y,Win,x4),
    show_fep(Fep,Win,Font,x4);
show_fep([{XX,YY,Name}|Fep],Win,Font,x1):-
    position(x1,XX,YY,X,Y),
    :draw_filled_rectangle(Win,X+10,Y+10,70,30,0,dotted,set), %%% Shadow
    :draw_filled_rectangle(Win,X,Y,70,30,3,fix,reset),        %%% Clear
    :draw_filled_rectangle(Win,X,Y,70,30,3,dotted,set),       %%% Draw
    :draw_string(Win,X+40,Y+31,Name,Font,set),                %%% FEP Name
    fep_hand(YY,X,Y,Win,x1),
    show_fep(Fep,Win,Font,x1);

fep_hand(0,X,Y,Win,x4):-                                         %%% Down Connection
    :draw_filled_rectangle(Win,X+80,Y+30,20,30,0,dotted,set),   %%% Shadow
    :draw_filled_rectangle(Win,X+60,Y+30,20,30,3,small_mesh,set);   %%% Shadow
fep_hand(0,X,Y,Win,x1):-                                         %%% Down Connection
    :draw_filled_rectangle(Win,X+35,Y+30,10,30,0,dotted,set),   %%% Shadow
    :draw_filled_rectangle(Win,X+30,Y+30,10,30,3,small_mesh,set);   %%% Shadow
fep_hand(9,X,Y,Win,x4):-                                         %%% Upper connection
    :draw_filled_rectangle(Win,X+80,Y-30,20,30,0,dotted,set),   %%% Shadow
    :draw_filled_rectangle(Win,X+60,Y-30,20,30,3,small_mesh,set);   %%% Shadow
fep_hand(9,X,Y,Win,x1):-                                         %%% Upper connection
    :draw_filled_rectangle(Win,X+35,Y-30,10,30,0,dotted,set),   %%% Shadow
    :draw_filled_rectangle(Win,X+30,Y-30,10,30,3,small_mesh,set);   %%% Shadow

position(x4,XX,0,X,20):- !,
    X is (XX-1) * 200 + 60;
position(x1,XX,0,X,0):- !,
    X is (XX-1) * 100 + 60;
position(x4,XX,9,X,850):-
    X is (XX-1) * 200 + 60;
position(x1,XX,9,X,860):-
    X is (XX-1) * 100 + 60;




configuration(8,Config):- !,Config = config(X,Y,Fep,Logical,Physical,Maintenance),
    X = 1, Y = 5,
%    Fep = [{2,9,"FEP#1"}],
    Fep = [{2,9,"FEP#0"}],
    Logical = 
           [[6,7],
            [4,5],
            [2,3],
            [0,1]],
    Physical =
           [[3,7],
            [2,6],
            [1,5],
            [0,4]],
    Maintenance =
            [[ 0, 3],
             [ 1, 2],
             [ 5, 6],
             [ 4, 7]];

configuration(16,Config):- !,Config = config(X,Y,Fep,Logical,Physical,Maintenance),
    X = 1, Y = 5,
%    Fep = [{2,9,"FEP#1"}],
%    Fep = [{2,9,"FEP#0"}],
    Fep = [{2,9,"FEP#0"}, {3,0,"FEP#1"}],
    Logical =
            [[12,13,14,15],
             [ 8, 9,10,11],
             [ 4, 5, 6, 7],
             [ 0, 1, 2, 3]],
    Physical =
            [[ 3, 7,11,15],
             [ 2, 6,10,14],
             [ 1, 5, 9,13],
             [ 0, 4, 8,12]],
    Maintenance =
            [[ 0, 3, 8,11],
             [ 1, 2, 9,10],
             [ 5, 6,13,14],
             [ 4, 7,12,15]];

configuration(24,Config):- !,Config = config(X,Y,Fep,Logical,Physical,Maintenance),
    X = 1, Y = 5,
%    Fep = [{2,9,"FEP#1"}],
    Fep = [{2,9,"FEP#0"}],
    Logical =
            [[18,19,20,21,22,23],
             [12,13,14,15,16,17],
             [ 6, 7, 8, 9,10,11],
             [ 0, 1, 2, 3, 4, 5]],
    Physical =
            [[ 3, 7,11,15,19,23],
             [ 2, 6,10,14,18,22],
             [ 1, 5, 9,13,17,21],
             [ 0, 4, 8,12,16,20]],
    Maintenance =
            [[ 0, 3, 8,11,16,19],
             [ 1, 2, 9,10,17,18],
             [ 5, 6,13,14,21,22],
             [ 4, 7,12,15,20,23]];

configuration(32,Config):- !,Config = config(X,Y,Fep,Logical,Physical,Maintenance),
    X = 1, Y = 5,
%    Fep =   [{2,9,"FEP#1"},{6,9,"FEP#2"}],
    Fep =   [{2,9,"FEP#0"},{6,9,"FEP#1"}],
    Logical =
            [[24,25,26,27,28,29,30,31],
             [16,17,18,19,20,21,22,23],
             [ 8, 9,10,11,12,13,14,15],
             [ 0, 1, 2, 3, 4, 5, 6, 7]],
    Physical =
            [[ 3, 7,11,15,19,23,27,31],
             [ 2, 6,10,14,18,22,26,30],
             [ 1, 5, 9,13,17,21,25,29],
             [ 0, 4, 8,12,16,20,24,28]],
    Maintenance =
            [[ 0, 3, 8,11,16,19,24,27],
             [ 1, 2, 9,10,17,18,25,26],
             [ 5, 6,13,14,21,22,29,30],
             [ 4, 7,12,15,20,23,29,31]];


configuration(64,Config):- !,Config = config(X,Y,Fep,Logical,Physical,Maintenance),
    X = 1, Y = 1,
%    Fep     =[{2,9,"FEP#1"},{6,9,"FEP#2"},{3,0,"FEP#4"},{7,0,"FEP#3"}],
    Fep     =[{2,9,"FEP#0"},{6,9,"FEP#1"},{3,0,"FEP#3"},{7,0,"FEP#2"}],
    Logical =
            [[56,57,58,59,60,61,62,63],
             [48,49,50,51,52,53,54,55],
             [40,41,42,43,44,45,46,47],
             [32,33,34,35,36,37,38,39],
             [24,25,26,27,28,29,30,31],
             [16,17,18,19,20,21,22,23],
             [ 8, 9,10,11,12,13,14,15],
             [ 0, 1, 2, 3, 4, 5, 6, 7]],
    Physical =
            [[ 7,15,23,31,39,47,55,63],
             [ 6,14,22,30,38,46,54,62],
             [ 5,13,21,29,37,45,53,61],
             [ 4,12,20,28,36,44,52,60],
             [ 3,11,19,27,35,43,51,59],
             [ 2,10,18,26,34,42,50,58],
             [ 1, 9,17,25,33,41,49,57],
             [ 0, 8,16,24,32,40,48,56]],
    Maintenance =
            [[63,60,55,52,47,44,39,36],
             [62,61,54,53,46,45,38,37],
             [58,57,50,49,42,41,34,33],
             [59,56,51,48,43,40,35,32],
             [ 0, 3, 8,11,16,19,24,27],
             [ 1, 2, 9,10,17,18,25,26],
             [ 5, 6,13,14,21,22,29,30],
             [ 4, 7,12,15,20,23,29,31]];

end.

class performance_pe has
:create(Class,PE):-
    :new(Class,PE);

instance
    attribute

    x_position,
    y_position,
    logical_address,
    physical_address,
    maintenance_address,
    last_status,
    total:= 0,
    hand ;

%%% Get Slot Value
:x_position(Obj,Obj!x_position);
:y_position(Obj,Obj!y_position);
:logical_address(Obj,Obj!logical_address);
:physical_address(Obj,Obj!physical_address);
:maintenance_address(Obj,Obj!maintenance_address);
:last_status(Obj,Obj!last_status);
:hand(Obj,Obj!hand);

%%% Set Slot Value
:set_x_position(Obj,Value):-            Obj!x_position:=Value;
:set_y_position(Obj,Value):-            Obj!y_position:=Value;
:set_logical_address(Obj,Value):-       Obj!logical_address:=Value;
:set_physical_address(Obj,Value):-      Obj!physical_address:=Value;
:set_maintenance_address(Obj,Value):-   Obj!maintenance_address:=Value;
:set_last_status(Obj,Value):-           Obj!last_status:=Value;
:set_hand(Obj,Value):-                  Obj!hand:=Value;


:show_initial(PE,Win,Font,PeFont,N):-
    :x_position(PE,XX),
    :y_position(PE,YY),
    position(N,XX,YY,X,Y),
    :logical_address(PE,Logical),
    :hand(PE,Hand),
    :draw_hand(PE,X,Y,Hand,Win,N),
    :draw_outer_box(PE,X,Y,Logical,Win,Font,N),
    :draw_inner_box(PE,X,Y,0,Win,PeFont,N);
:show_physical(PE,Win,Font,N):-
    :x_position(PE,XX),
    :y_position(PE,YY),
    position(N,XX,YY,X,Y),
    :physical_address(PE,Physical),
    :draw_pe_number(PE,X,Y,Physical,Win,Font,N);
:show_logical(PE,Win,Font,N):-
    :x_position(PE,XX),
    :y_position(PE,YY),
    position(N,XX,YY,X,Y),
    :logical_address(PE,Logical),
    :draw_pe_number(PE,X,Y,Logical,Win,Font,N);
:show_maintenance(PE,Win,Font,N):-
    :x_position(PE,XX),
    :y_position(PE,YY),
    position(N,XX,YY,X,Y),
    :maintenance_address(PE,Maintenance),
    :draw_pe_number(PE,X,Y,Maintenance,Win,Font,N);
:show_total(PE,Win,Font):-
    :logical_address(PE,No),
    Total = PE!total,
    :get_number_string(#symbolizer,Total,String),
    string(String,Length,_),
    X = 930+(7-Length)*11,Y = 880-No*13,
    :draw_string(Win,X,Y,String,Font,set),
    divide_with_remainder(Total,1000,Syou,Amari),
    :draw_filled_rectangle(Win,1010,Y+2,Syou*4,13,3,fix,set); %%% Syou*4 is temporary

:draw_hand(PE,X,Y,no,Win,_):-!;
:draw_hand(PE,X,Y,right,Win,x4):-
    :draw_filled_rectangle(Win,X+140,Y+80,60,20,0,dotted,set),   %%% Shadow
    :draw_filled_rectangle(Win,X+140,Y+60,60,20,3,small_mesh,set); % Hand
:draw_hand(PE,X,Y,right,Win,x1):-
    :draw_filled_rectangle(Win,X+70,Y+40,30,10,0,dotted,set),   %%% Shadow
    :draw_filled_rectangle(Win,X+70,Y+30,30,10,3,small_mesh,set); % Hand
:draw_hand(PE,X,Y,down,Win,x4):- 
    :draw_filled_rectangle(Win,X+80,Y+140,20,60,0,dotted,set),
    :draw_filled_rectangle(Win,X+60,Y+140,20,60,3,small_mesh,set);
:draw_hand(PE,X,Y,down,Win,x1):-
    :draw_filled_rectangle(Win,X+40,Y+70,10,30,0,dotted,set),
    :draw_filled_rectangle(Win,X+30,Y+70,10,30,3,small_mesh,set);
:draw_hand(PE,X,Y,right_and_down,Win,N):-
    :draw_hand(PE,X,Y,right,Win,N),
    :draw_hand(PE,X,Y,down,Win,N);


:draw_outer_box(PE,X,Y,Logical,Win,Font,x4):-
    :draw_filled_rectangle(Win,X+20,Y+20,140,140,0,dotted,set), %%% Shadow
    :draw_filled_rectangle(Win,X,Y,140,140,3,fix,reset),        %%% Clear
    :draw_pe_number(PE,X,Y,Logical,Win,Font,x4);
:draw_outer_box(PE,X,Y,Logical,Win,Font,x1):-
    :draw_filled_rectangle(Win,X+10,Y+10,70,70,0,dotted,set), %%% Shadow
    :draw_filled_rectangle(Win,X,Y,70,70,3,fix,reset),        %%% Clear
%    :draw_rectangle(Win,X,Y,70,70,1,dotted,set),
%    :draw_filled_rectangle(Win,X,Y,70,70,3,dotted,set),        %%% Draw
    :draw_pe_number(PE,X,Y,Logical,Win,Font,x1);

:draw_pe_number(PE,X,Y,PeNumber,Win,Font,x4):-
    pe_number_string(PeNumber,String),
    :draw_string(Win,X+100,Y+142,String,Font,set);              %%% Pe Number
:draw_pe_number(PE,X,Y,PeNumber,Win,Font,x1):-
    pe_number_string(PeNumber,String),
    :draw_string(Win,X+40,Y+71,String,Font,set);              %%% Pe Number

:draw_inner_box(PE,X,Y,Percent,Win,PeFont,x4):-
    color_source_position_and_percent(Percent,Simple,Dx,Dy),
    :last_status(PE,Last),
    (Last == Simple,!;
     :set_last_status(PE,Simple),
          :transfer(Win,Dx,Dy,X+28,Y+28,80,40,copy),
          :transfer(Win,Dx,Dy,X+28,Y+68,80,40,copy)), ! ;
:draw_inner_box(PE,X,Y,Percent,Win,PeFont,x1):-
    color_source_position_and_percent(Percent,Simple,Dx,Dy),
    :last_status(PE,Last),
    (Last == Simple,!;
     :set_last_status(PE,Simple),
          :transfer(Win,Dx,Dy,X+13,Y+14,40,40,copy)), ! ;
%         :draw_string(Win,X+13,Y+14,String,PeFont,reset));  %%% Inner Box
%:draw_inner_box(PE,X,Y,Percent,Win,PeFont):-
%    percent(Percent,Simple,String),
%    change_color(Win,Simple),
%    :last_status(PE,Last),
%    (Last == Simple,!;
%     :set_last_status(PE,Simple),
%          :draw_filled_rectangle(Win,X+13,Y+14,40,40,3,fix,set)),
%%         :draw_string(Win,X+13,Y+14,String,PeFont,reset));  %%% Inner Box
%    change_color(Win,default);
:draw_inner_box_color(PE,X,Y,Percent,Win,PeFont):-
    percent(Percent,Simple,String),
    change_color(Win,Simple),
    :last_status(PE,Last),
    (Last == Simple,!;
     :set_last_status(PE,Simple),
        :draw_filled_rectangle(Win,X+13,Y+14,40,40,3,fill,reset));
%         :draw_string(Win,X+13,Y+14,String,PeFont,reset));  %%% Inner Box

:cpu_performance(PE,Percent,Win,PeFont,N):-
    :x_position(PE,XX),
    :y_position(PE,YY),
    position(N,XX,YY,X,Y),
    :draw_inner_box(PE,X,Y,Percent,Win,PeFont,N) ;
%%    :draw_inner_box_color(PE,X,Y,Percent,Win,PeFont),
%    LastTotal = PE!total,
%    PE!total:=LastTotal+Percent,
%    change_color(Win,timer);
    
:pe_number_string(PE,PeNo,String):-
    pe_number_string(PeNo,String);

local
change_color(W,0):-   !, :set_color(W,2,drawing);
change_color(W,25):-  !, :set_color(W,4,drawing);
change_color(W,50):-  !, :set_color(W,6,drawing);
change_color(W,75):-  !, :set_color(W,8,drawing);
change_color(W,100):- !, :set_color(W,10,drawing);
change_color(W,default):- :set_color(W,12,drawing);
change_color(W,timer):-  :set_color(W,14,drawing);
position(x4,XX,YY,X,Y):-
    X is (XX-1) * 200 + 60,
    Y is (YY-5) * 200 + 80;
position(x1,XX,YY,X,Y):-
    X is (XX-1) * 100 + 60,
    Y is (YY-1) * 100 + 60;

color_source_position_and_percent(Percent, 90,950,350):- 
    Percent >89, ! ;
color_source_position_and_percent(Percent, 80,950,400):- 
    Percent >79, ! ;
color_source_position_and_percent(Percent, 70,950,450):- 
    Percent >69, ! ;
color_source_position_and_percent(Percent, 60,950,500):- 
    Percent >59, ! ;
color_source_position_and_percent(Percent, 50,950,550):- 
    Percent >49, ! ;
color_source_position_and_percent(Percent, 40,950,600):- 
    Percent >39, ! ;
color_source_position_and_percent(Percent, 30,950,650):- 
    Percent >29, ! ;
color_source_position_and_percent(Percent, 20,950,700):- 
    Percent >19, ! ;
color_source_position_and_percent(Percent, 10,950,750):- 
    Percent >9, ! ;
color_source_position_and_percent(Percent,  0,950,800) ;

percent(Percent,100,String):- Percent >79,!,String=double_bytes#{4};
percent(Percent, 75,String):- Percent >59,!,String=double_bytes#{3};
percent(Percent, 50,String):- Percent >39,!,String=double_bytes#{2};
percent(Percent, 25,String):- Percent >19,!,String=double_bytes#{1};
percent(Percent,  0,String):-               String=double_bytes#{0};

pe_number_string(0,"PE00"):- !; pe_number_string(10,"PE10"):- !;
pe_number_string(1,"PE01"):- !; pe_number_string(11,"PE11"):- !;
pe_number_string(2,"PE02"):- !; pe_number_string(12,"PE12"):- !;
pe_number_string(3,"PE03"):- !; pe_number_string(13,"PE13"):- !;
pe_number_string(4,"PE04"):- !; pe_number_string(14,"PE14"):- !;
pe_number_string(5,"PE05"):- !; pe_number_string(15,"PE15"):- !;
pe_number_string(6,"PE06"):- !; pe_number_string(16,"PE16"):- !;
pe_number_string(7,"PE07"):- !; pe_number_string(17,"PE17"):- !;
pe_number_string(8,"PE08"):- !; pe_number_string(18,"PE18"):- !;
pe_number_string(9,"PE09"):- !; pe_number_string(19,"PE19"):- !;

pe_number_string(20,"PE20"):- !; pe_number_string(30,"PE30"):- !;
pe_number_string(21,"PE21"):- !; pe_number_string(31,"PE31"):- !;
pe_number_string(22,"PE22"):- !; pe_number_string(32,"PE32"):- !;
pe_number_string(23,"PE23"):- !; pe_number_string(33,"PE33"):- !;
pe_number_string(24,"PE24"):- !; pe_number_string(34,"PE34"):- !;
pe_number_string(25,"PE25"):- !; pe_number_string(35,"PE35"):- !;
pe_number_string(26,"PE26"):- !; pe_number_string(36,"PE36"):- !;
pe_number_string(27,"PE27"):- !; pe_number_string(37,"PE37"):- !;
pe_number_string(28,"PE28"):- !; pe_number_string(38,"PE38"):- !;
pe_number_string(29,"PE29"):- !; pe_number_string(39,"PE39"):- !;

pe_number_string(40,"PE40"):- !; pe_number_string(50,"PE50"):- !;
pe_number_string(41,"PE41"):- !; pe_number_string(51,"PE51"):- !;
pe_number_string(42,"PE42"):- !; pe_number_string(52,"PE52"):- !;
pe_number_string(43,"PE43"):- !; pe_number_string(53,"PE53"):- !;
pe_number_string(44,"PE44"):- !; pe_number_string(54,"PE54"):- !;
pe_number_string(45,"PE45"):- !; pe_number_string(55,"PE55"):- !;
pe_number_string(46,"PE46"):- !; pe_number_string(56,"PE56"):- !;
pe_number_string(47,"PE47"):- !; pe_number_string(57,"PE57"):- !;
pe_number_string(48,"PE48"):- !; pe_number_string(58,"PE58"):- !;
pe_number_string(49,"PE49"):- !; pe_number_string(59,"PE59"):- !;

pe_number_string(60,"PE60"):- !; 
pe_number_string(61,"PE61"):- !; 
pe_number_string(62,"PE62"):- !; 
pe_number_string(63,"PE63");

end.
